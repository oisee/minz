; MinZ generated code
; Generated: 2025-08-21 08:12:53


; Code section
    ORG $8000

; Using hierarchical register allocation (physical → shadow → memory)

; Function: test_case_typed.test
test_case_typed.test:
; IsSMCDefault=true, IsSMCEnabled=true
; Using absolute addressing for locals (SMC style)
    ; r2 = 2
    LD A, 2
    ; Register 2 already in A
    ; store x, r2
    ; Register 2 already in A
    LD ($F002), A
    ; r4 = load result
    LD A, ($F006)
    LD C, A         ; Store to physical register C
    ; Call runtime print_u8_decimal
    ; Call to print_u8_decimal (args: 1)
    ; Stack-based parameter passing
    PUSH HL       ; Argument 0
    CALL print_u8_decimal
    LD ($F000), HL    ; Virtual register 0 to memory
    ; return
    RET
; Using hierarchical register allocation (physical → shadow → memory)

; Function: test_case_typed.main
test_case_typed.main:
; IsSMCDefault=true, IsSMCEnabled=true
; Using absolute addressing for locals (SMC style)
    ; r1 = call test_case_typed.test
    ; Call to test_case_typed.test (args: 0)
    ; Found function, UsesTrueSMC=false
    CALL test_case_typed.test
    ; return
    RET

; Runtime print helper functions
print_u8_decimal:
    LD H, 0            ; HL = A (zero extend)
    LD L, A
    CALL print_u16_decimal
    RET

print_u16_decimal:
    LD BC, -10000
    LD DE, -1000
    CALL print_digit
    LD BC, -1000
    LD DE, -100
    CALL print_digit
    LD BC, -100
    LD DE, -10
    CALL print_digit
    LD BC, -10
    LD DE, -1
    CALL print_digit
    LD A, L
    ADD A, '0'         ; Convert to ASCII
    RST 16             ; Print last digit
    RET


; Standard library routines

    END main
