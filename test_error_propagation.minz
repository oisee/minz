// Simple test for error propagation system
enum TestError { Failed, Invalid }

// Function that can fail
fun might_fail?(x: u8) -> u8 ? TestError {
    if x == 0 {
        @error(TestError.Failed);
    }
    return x * 2;
}

// Function that propagates errors  
fun chain_operation?(x: u8) -> u8 ? TestError {
    let result = might_fail?(x) ?? @error;  // Zero-overhead propagation!
    return result + 1;
}

fun main() -> void {
    let success = chain_operation?(5) ?? 99;
    let failure = chain_operation?(0) ?? 99;
    @print("Success: {}, Failure: {}", success, failure);
}