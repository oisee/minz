// Test to show register allocation improvements

// Function with minimal register usage - should have lean prologue
fn simple_add(a: u8, b: u8) -> u8 {
    return a + b;
}

// Function with more registers - should save only what's used
fn complex_calc(x: u16, y: u16, z: u16) -> u16 {
    let t1 = x + y;
    let t2 = y + z;
    let t3 = x + z;
    return t1 + t2 + t3;
}

// Interrupt handler - should use EXX for fast save/restore
@interrupt
fn timer_isr() -> void {
    let counter: u8 = 0;
    counter = counter + 1;
    return;
}

fn main() -> void {
    let a = simple_add(5, 10);
    let b = complex_calc(100, 200, 300);
    return;
}