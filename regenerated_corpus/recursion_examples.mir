; MinZ Intermediate Representation (MIR)
; Module: main

Function examples.recursion_examples.factorial$u8(n: u8) -> u16
  @smc
  @recursive
  Instructions:
      0: LOAD_PARAM
      1: r3 = 1
      2: r4 = r2 <= r3
      3: jump_if_not r4, else_1
      4: r5 = 1
      5: return r5
      6: jump end_if_2
      7: else_1:
      8: end_if_2:
      9: LOAD_PARAM
     10: LOAD_PARAM
     11: r8 = 1
     12: r9 = r7 - r8
     13: LOAD_PARAM
     14: r11 = 1
     15: r12 = r10 - r11
     16: PATCH_TEMPLATE
     17: PATCH_TARGET
     18: PATCH_PARAM
     19: r13 = call examples.recursion_examples.factorial$u8
     20: r14 = r6 * r13
     21: return r14

Function examples.recursion_examples.gcd$u8$u8(a: u8, b: u8) -> u8
  @smc
  @recursive
  Instructions:
      0: LOAD_PARAM
      1: r4 = 0
      2: r5 = r3 == r4
      3: jump_if_not r5, else_3
      4: LOAD_PARAM
      5: return r6
      6: jump end_if_4
      7: else_3:
      8: end_if_4:
      9: LOAD_PARAM
     10: LOAD_PARAM
     11: LOAD_PARAM
     12: MOD
     13: LOAD_PARAM
     14: LOAD_PARAM
     15: LOAD_PARAM
     16: MOD
     17: PATCH_TEMPLATE
     18: PATCH_TARGET
     19: PATCH_PARAM
     20: PATCH_PARAM
     21: r15 = call examples.recursion_examples.gcd$u8$u8
     22: return r15

Function examples.recursion_examples.binary_search$p_u8$u8$u8$u8(arr: *u8, target: u8, left: u8, right: u8) -> i8
  @smc
  Locals:
    r10 = mid: u16
    r18 = value: u16
  Instructions:
      0: LOAD_PARAM
      1: LOAD_PARAM
      2: r7 = r5 > r6
      3: jump_if_not r7, else_5
      4: r8 = 1
      5: NEG
      6: return r9
      7: jump end_if_6
      8: else_5:
      9: end_if_6:
     10: LOAD_PARAM
     11: LOAD_PARAM
     12: LOAD_PARAM
     13: r14 = r12 - r13
     14: r15 = 2
     15: DIV
     16: r17 = r11 + r16
     17: store mid, r17
     18: LOAD_PARAM
     19: r20 = load mid
     20: r21 = r19 + r20
     21: LOAD
     22: store value, r22
     23: r23 = load value
     24: LOAD_PARAM
     25: r25 = r23 == r24
     26: TEST
     27: JUMP_IF_ZERO
     28: r26 = r0
     29: jump if_expr_end_8
     30: if_expr_else_7:
     31: r27 = load value
     32: LOAD_PARAM
     33: r29 = r27 < r28
     34: TEST
     35: JUMP_IF_ZERO
     36: r30 = r0
     37: jump if_expr_end_10
     38: if_expr_else_9:
     39: r30 = r0
     40: if_expr_end_10:
     41: r26 = r30
     42: if_expr_end_8:
     43: return

