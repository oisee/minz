; MinZ Intermediate Representation (MIR)
; Module: main

; Globals:
;   examples.arithmetic_16bit.g_sum: u16
;   examples.arithmetic_16bit.g_diff: u16
;   examples.arithmetic_16bit.g_product: u16

Function examples.arithmetic_16bit.test_16bit_ops() -> void
  Locals:
    r1 = a: u16
    r3 = b: u16
    r11 = c: u16
    r13 = d: u16
    r18 = mask: u16
    r20 = result: u16
    r24 = shifted: u16
  Instructions:
      0: r2 = 4660
      1: store a, r2
      2: r4 = 22136
      3: store b, r4
      4: r5 = load a
      5: r6 = load b
      6: r7 = r5 + r6
      7: store g_sum, r7
      8: r8 = load b
      9: r9 = load a
     10: r10 = r8 - r9
     11: store g_diff, r10
     12: r12 = 100
     13: store c, r12
     14: r14 = 200
     15: store d, r14
     16: r15 = load c
     17: r16 = load d
     18: r17 = r15 * r16
     19: store g_product, r17
     20: r19 = 65280
     21: store mask, r19
     22: r21 = load b
     23: r22 = load mask
     24: r23 = r21 & r22
     25: store result, r23
     26: r25 = load a
     27: r26 = 4
     28: SHL
     29: store shifted, r27
     30: return

Function examples.arithmetic_16bit.main() -> void
  @smc
  Instructions:
      0: r1 = call examples.arithmetic_16bit.test_16bit_ops
      1: return

