; MinZ Intermediate Representation (MIR)
; Module: main

Function examples.zero_cost_interfaces_concept.sprite_draw$p_Sprite(s: *examples.zero_cost_interfaces_concept.Sprite) -> void
  @smc
  Instructions:
      0: LOAD_STRING
      1: PRINT_STRING ; Print "Drawing sprite at (" (19 chars via loop)
      2: PRINT_STRING_DIRECT ; Direct print ", " (2 chars)
      3: PRINT_STRING_DIRECT ; Direct print ") size " (7 chars)
      4: PRINT_STRING_DIRECT ; Direct print "x" (1 chars)
      5: PRINT_STRING_DIRECT ; Direct print "
" (1 chars)
      6: return

Function examples.zero_cost_interfaces_concept.text_draw$p_Text(t: *examples.zero_cost_interfaces_concept.Text) -> void
  @smc
  Instructions:
      0: LOAD_STRING
      1: PRINT_STRING ; Print "Drawing text at (" (17 chars via loop)
      2: PRINT_STRING_DIRECT ; Direct print ", " (2 chars)
      3: LOAD_STRING
      4: PRINT_STRING ; Print ") length " (9 chars via loop)
      5: PRINT_STRING_DIRECT ; Direct print "
" (1 chars)
      6: return

Function examples.zero_cost_interfaces_concept.circle_draw$p_Circle(c: *examples.zero_cost_interfaces_concept.Circle) -> void
  @smc
  Instructions:
      0: LOAD_STRING
      1: PRINT_STRING ; Print "Drawing circle at (" (19 chars via loop)
      2: PRINT_STRING_DIRECT ; Direct print ", " (2 chars)
      3: LOAD_STRING
      4: PRINT_STRING ; Print ") radius " (9 chars via loop)
      5: PRINT_STRING_DIRECT ; Direct print "
" (1 chars)
      6: return

Function examples.zero_cost_interfaces_concept.render_sprite$p_Sprite(s: *examples.zero_cost_interfaces_concept.Sprite) -> void
  @smc
  Instructions:
      0: LOAD_STRING
      1: PRINT_STRING ; Print "Rendering: " (11 chars via loop)
      2: LOAD_PARAM
      3: LOAD_PARAM
      4: r5 = call examples.zero_cost_interfaces_concept.sprite_draw$p_Sprite
      5: return

Function examples.zero_cost_interfaces_concept.render_text$p_Text(t: *examples.zero_cost_interfaces_concept.Text) -> void
  @smc
  Instructions:
      0: LOAD_STRING
      1: PRINT_STRING ; Print "Rendering: " (11 chars via loop)
      2: LOAD_PARAM
      3: LOAD_PARAM
      4: r5 = call examples.zero_cost_interfaces_concept.text_draw$p_Text
      5: return

Function examples.zero_cost_interfaces_concept.render_circle$p_Circle(c: *examples.zero_cost_interfaces_concept.Circle) -> void
  @smc
  Instructions:
      0: LOAD_STRING
      1: PRINT_STRING ; Print "Rendering: " (11 chars via loop)
      2: LOAD_PARAM
      3: LOAD_PARAM
      4: r5 = call examples.zero_cost_interfaces_concept.circle_draw$p_Circle
      5: return

Function examples.zero_cost_interfaces_concept.vtable_dispatch$p_VTableDrawable(vtable: *examples.zero_cost_interfaces_concept.VTableDrawable) -> void
  @smc
  Instructions:
      0: LOAD_STRING
      1: PRINT_STRING ; Print "Traditional vtable dispatch:
" (29 chars via loop)
      2: LOAD_STRING
      3: PRINT_STRING ; Print "  LD HL, (vtable)     ; 16 T-states
" (36 chars via loop)
      4: LOAD_STRING
      5: PRINT_STRING ; Print "  LD E, (HL)          ; 7 T-states
" (35 chars via loop)
      6: LOAD_STRING
      7: PRINT_STRING ; Print "  INC HL              ; 6 T-states
" (35 chars via loop)
      8: LOAD_STRING
      9: PRINT_STRING ; Print "  LD D, (HL)          ; 7 T-states
" (35 chars via loop)
     10: LOAD_STRING
     11: PRINT_STRING ; Print "  CALL (DE)           ; 17 T-states
" (36 chars via loop)
     12: LOAD_STRING
     13: PRINT_STRING ; Print "  Total: 53 T-states!
" (22 chars via loop)
     14: return

Function examples.zero_cost_interfaces_concept.zero_cost_dispatch() -> void
  @smc
  Instructions:
      0: LOAD_STRING
      1: PRINT_STRING ; Print "
MinZ zero-cost dispatch:
" (26 chars via loop)
      2: LOAD_STRING
      3: PRINT_STRING ; Print "  CALL sprite_draw    ; 17 T-states
" (36 chars via loop)
      4: LOAD_STRING
      5: PRINT_STRING ; Print "  Total: 17 T-states!
" (22 chars via loop)
      6: LOAD_STRING
      7: PRINT_STRING ; Print "  Savings: 36 T-states (68% faster!)
" (37 chars via loop)
      8: return

Function examples.zero_cost_interfaces_concept.game_object_update$p_GameObject(obj: *examples.zero_cost_interfaces_concept.GameObject) -> void
  @smc
  Instructions:
      0: LOAD_PARAM
      1: LOAD_FIELD ; Load field sprite (offset 0)
      2: ADDR
      3: LOAD_PARAM
      4: LOAD_FIELD ; Load field sprite (offset 0)
      5: ADDR
      6: r8 = call examples.zero_cost_interfaces_concept.sprite_draw$p_Sprite
      7: LOAD_STRING
      8: PRINT_STRING ; Print "  (Would check collision here)
" (31 chars via loop)
      9: return

Function examples.zero_cost_interfaces_concept.demonstrate_monomorphization() -> void
  @smc
  Instructions:
      0: LOAD_STRING
      1: PRINT_STRING ; Print "
=== Monomorphization ===
" (26 chars via loop)
      2: LOAD_STRING
      3: PRINT_STRING ; Print "Generic function calls create specialized versions:

" (53 chars via loop)
      4: LOAD_STRING
      5: PRINT_STRING ; Print "render<Sprite>(s) generates:
" (29 chars via loop)
      6: LOAD_STRING
      7: PRINT_STRING ; Print "  render_sprite: CALL sprite_draw

" (35 chars via loop)
      8: LOAD_STRING
      9: PRINT_STRING ; Print "render<Text>(t) generates:
" (27 chars via loop)
     10: LOAD_STRING
     11: PRINT_STRING ; Print "  render_text: CALL text_draw

" (31 chars via loop)
     12: LOAD_STRING
     13: PRINT_STRING ; Print "render<Circle>(c) generates:
" (29 chars via loop)
     14: LOAD_STRING
     15: PRINT_STRING ; Print "  render_circle: CALL circle_draw

" (35 chars via loop)
     16: LOAD_STRING
     17: PRINT_STRING ; Print "No runtime type checking needed!
" (33 chars via loop)
     18: return

Function examples.zero_cost_interfaces_concept.main() -> void
  @smc
  Locals:
    r4 = s: examples.zero_cost_interfaces_concept.Sprite
    r13 = t: examples.zero_cost_interfaces_concept.Text
    r20 = c: examples.zero_cost_interfaces_concept.Circle
    r44 = vtable: examples.zero_cost_interfaces_concept.VTableDrawable
  Instructions:
      0: LOAD_STRING
      1: PRINT_STRING ; Print "=====================================
" (38 chars via loop)
      2: LOAD_STRING
      3: PRINT_STRING ; Print "Zero-Cost Interfaces Concept Demo
" (34 chars via loop)
      4: LOAD_STRING
      5: PRINT_STRING ; Print "=====================================

" (39 chars via loop)
      6: r5 = 10
      7: r6 = load s
      8: STORE_FIELD ; Store to field x (offset 0)
      9: r7 = 20
     10: r8 = load s
     11: STORE_FIELD ; Store to field y (offset 1)
     12: r9 = 32
     13: r10 = load s
     14: STORE_FIELD ; Store to field width (offset 2)
     15: r11 = 24
     16: r12 = load s
     17: STORE_FIELD ; Store to field height (offset 3)
     18: r14 = 50
     19: r15 = load t
     20: STORE_FIELD ; Store to field x (offset 0)
     21: r16 = 10
     22: r17 = load t
     23: STORE_FIELD ; Store to field y (offset 1)
     24: r18 = 12
     25: r19 = load t
     26: STORE_FIELD ; Store to field len (offset 2)
     27: r21 = 128
     28: r22 = load c
     29: STORE_FIELD ; Store to field cx (offset 0)
     30: r23 = 96
     31: r24 = load c
     32: STORE_FIELD ; Store to field cy (offset 1)
     33: r25 = 25
     34: r26 = load c
     35: STORE_FIELD ; Store to field r (offset 2)
     36: LOAD_STRING
     37: PRINT_STRING ; Print "=== Direct Specialized Calls ===
" (33 chars via loop)
     38: r28 = load s
     39: ADDR
     40: r30 = load s
     41: ADDR
     42: r32 = call examples.zero_cost_interfaces_concept.render_sprite$p_Sprite
     43: r33 = load t
     44: ADDR
     45: r35 = load t
     46: ADDR
     47: r37 = call examples.zero_cost_interfaces_concept.render_text$p_Text
     48: r38 = load c
     49: ADDR
     50: r40 = load c
     51: ADDR
     52: r42 = call examples.zero_cost_interfaces_concept.render_circle$p_Circle
     53: LOAD_STRING
     54: PRINT_STRING ; Print "
=== Performance Analysis ===
" (30 chars via loop)
     55: r45 = 32768
     56: r46 = load vtable
     57: STORE_FIELD ; Store to field draw_fn (offset 0)
     58: r47 = 36864
     59: r48 = load vtable
     60: STORE_FIELD ; Store to field data (offset 2)
     61: r49 = load vtable
     62: ADDR
     63: r51 = load vtable
     64: ADDR
     65: r53 = call examples.zero_cost_interfaces_concept.vtable_dispatch$p_VTableDrawable
     66: r54 = call examples.zero_cost_interfaces_concept.zero_cost_dispatch
     67: r55 = call examples.zero_cost_interfaces_concept.demonstrate_monomorphization
     68: LOAD_STRING
     69: PRINT_STRING ; Print "
=== Benefits ===
" (18 chars via loop)
     70: LOAD_STRING
     71: PRINT_STRING ; Print "â No vtables in memory
" (28 chars via loop)
     72: LOAD_STRING
     73: PRINT_STRING ; Print "â No indirect calls
" (25 chars via loop)
     74: LOAD_STRING
     75: PRINT_STRING ; Print "â Compile-time type checking
" (34 chars via loop)
     76: LOAD_STRING
     77: PRINT_STRING ; Print "â Can inline interface methods
" (36 chars via loop)
     78: LOAD_STRING
     79: PRINT_STRING ; Print "â 68% faster than vtable dispatch
" (39 chars via loop)
     80: LOAD_STRING
     81: PRINT_STRING ; Print "
=====================================
" (39 chars via loop)
     82: LOAD_STRING
     83: PRINT_STRING ; Print "Future MinZ: Interfaces with ZERO cost!
" (40 chars via loop)
     84: LOAD_STRING
     85: PRINT_STRING ; Print "=====================================
" (38 chars via loop)
     86: return

