; MinZ generated code
; Generated: 2025-08-16 22:40:49


; Code section
    ORG $8000

; Using hierarchical register allocation (physical → shadow → memory)

; Function: examples.lua_constants.main
examples.lua_constants.main:
; Using stack-based locals (IX+offset)
    PUSH IX
    LD IX, SP
    LD HL, -14
    ADD HL, SP
    LD SP, HL
    ; Load parameters from registers
    ; r2 = 32768
    LD HL, 32768
    LD ($F004), HL    ; Virtual register 2 to memory
    ; store base, r2
    LD HL, ($F004)    ; Virtual register 2 from memory
    LD (IX-2), L
    LD (IX-1), H
    ; r4 = 33792
    LD HL, 33792
    LD B, H
    LD C, L
    ; store stack, r4
    LD H, B
    LD L, C
    LD (IX-4), L
    LD (IX-3), H
    ; r6 = 768
    LD HL, 768
    ; store size, r6
    LD (IX-6), L
    LD (IX-5), H
    ; r8 = 128
    LD A, 128
    EXX               ; Switch to shadow registers
    LD C, A         ; Store to shadow C' (now active)
    EXX               ; Switch back to main registers
    ; store bit, r8
    LD (IX-8), L
    LD (IX-7), H
    ; r10 = 15
    LD A, 15
    EXX               ; Switch to shadow registers
    LD E, A         ; Store to shadow E' (now active)
    EXX               ; Switch back to main registers
    ; store mask, r10
    LD (IX-10), L
    LD (IX-9), H
    ; r12 = 79
    LD A, 79
    LD H, A         ; Store to physical register H
    ; store attr1, r12
    LD (IX-12), L
    LD (IX-11), H
    ; r14 = 70
    LD A, 70
    LD L, A         ; Store to HL (low byte)
    ; store attr2, r14
    ; Register 14 already in HL
    LD (IX-14), L
    LD (IX-13), H
    ; return
    LD SP, IX
    POP IX
    RET

    END main
