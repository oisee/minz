; MinZ Intermediate Representation (MIR)
; Module: main

Function examples.stdlib_basic_test.test_basic_io() -> void
  @smc
  Instructions:
      0: r1 = 42
      1: r0 = call print_u8_decimal ; Call runtime print_u8_decimal
      2: r2 = 1234
      3: r0 = call print_u16_decimal ; Call runtime print_u16_decimal
      4: r3 = 50
      5: NEG
      6: r0 = call print_i8_decimal ; Call runtime print_i8_decimal
      7: r5 = 1000
      8: NEG
      9: r0 = call print_i16_decimal ; Call runtime print_i16_decimal
     10: r7 = 1
     11: r0 = call print_bool ; Call runtime print_bool
     12: return

Function examples.stdlib_basic_test.test_structs() -> void
  @smc
  Locals:
    r1 = point: u16
  Instructions:
      0: ALLOC ; Allocate struct Point
      1: r3 = 100
      2: STORE_FIELD ; Store to Point.x
      3: r4 = 200
      4: STORE_FIELD ; Store to Point.y
      5: store point, r2
      6: r5 = load point
      7: LOAD_FIELD ; Load field x (offset 0)
      8: r0 = call print_u16_decimal ; Call runtime print_u16_decimal
      9: r7 = load point
     10: LOAD_FIELD ; Load field y (offset 2)
     11: r0 = call print_u16_decimal ; Call runtime print_u16_decimal
     12: return

Function examples.stdlib_basic_test.test_arrays() -> void
  @smc
  Locals:
    r1 = numbers: [3]u8
  Instructions:
      0: r3 = 1
      1: r4 = 2
      2: r5 = 3
      3: ARRAY_INIT ; Array initializer with 3 elements
      4: ARRAY_ELEMENT ; Initialize array[0]
      5: ARRAY_ELEMENT ; Initialize array[1]
      6: ARRAY_ELEMENT ; Initialize array[2]
      7: r6 = 1
      8: r7 = load numbers ; Load array numbers base address
      9: STORE_INDEX ; Store element 0
     10: r8 = 2
     11: r9 = load numbers ; Load array numbers base address
     12: r10 = 1
     13: r11 = r9 + r10
     14: STORE_DIRECT ; Store element 1
     15: r12 = 3
     16: r13 = load numbers ; Load array numbers base address
     17: r14 = 2
     18: r15 = r13 + r14
     19: STORE_DIRECT ; Store element 2
     20: r16 = load numbers
     21: r17 = 0
     22: LOAD_INDEX ; Load array element (u8)
     23: r0 = call print_u8_decimal ; Call runtime print_u8_decimal
     24: r19 = load numbers
     25: r20 = 1
     26: LOAD_INDEX ; Load array element (u8)
     27: r0 = call print_u8_decimal ; Call runtime print_u8_decimal
     28: r22 = load numbers
     29: r23 = 2
     30: LOAD_INDEX ; Load array element (u8)
     31: r0 = call print_u8_decimal ; Call runtime print_u8_decimal
     32: return

Function examples.stdlib_basic_test.add$u16$u16(a: u16, b: u16) -> u16
  @smc
  Instructions:
      0: LOAD_PARAM
      1: LOAD_PARAM
      2: r5 = r3 + r4
      3: return r5

Function examples.stdlib_basic_test.test_functions() -> void
  @smc
  Locals:
    r1 = result: u16
  Instructions:
      0: r2 = 10
      1: r3 = 20
      2: r4 = 10
      3: r5 = 20
      4: PATCH_TEMPLATE
      5: PATCH_TARGET
      6: PATCH_PARAM
      7: PATCH_PARAM
      8: r6 = call examples.stdlib_basic_test.add$u16$u16
      9: store result, r6
     10: r7 = load result
     11: r0 = call print_u16_decimal ; Call runtime print_u16_decimal
     12: return

Function examples.stdlib_basic_test.main() -> void
  @smc
  Instructions:
      0: r1 = call examples.stdlib_basic_test.test_basic_io
      1: r2 = call examples.stdlib_basic_test.test_structs
      2: r3 = call examples.stdlib_basic_test.test_arrays
      3: r4 = call examples.stdlib_basic_test.test_functions
      4: return

