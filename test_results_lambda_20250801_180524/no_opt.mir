; MinZ Intermediate Representation (MIR)
; Module: main

Function examples.lambda_basic_test.add_five_traditional(x: u8) -> u8
  @smc
  Instructions:
      0: LOAD_PARAM
      1: r3 = 5
      2: r4 = r2 + r3
      3: return

Function lambda_examples.lambda_basic_test.test_lambda_basic_0(x: u8) -> u8
  @smc
  Instructions:
      0: r0 = load x
      1: r1 = 5
      2: r2 = r0 + r1
      3: r3 = load x
      4: r4 = 5
      5: r5 = r3 + r4
      6: return r5

Function examples.lambda_basic_test.test_lambda_basic() -> u8
  @smc
  Locals:
    r1 = add_five: |u8| -> u8
  Instructions:
      0: UNKNOWN_OP_71
      1: store , r2
      2: r3 = 10
      3: r4 = load 
      4: CALL_INDIRECT
      5: return

Function lambda_examples.lambda_basic_test.test_lambda_direct_1(x: u8) -> u8
  @smc
  Instructions:
      0: r0 = load x
      1: r1 = 5
      2: r2 = r0 + r1
      3: r3 = load x
      4: r4 = 5
      5: r5 = r3 + r4
      6: return r5

Function examples.lambda_basic_test.test_lambda_direct() -> u8
  @smc
  Locals:
    r1 = f: |u8| -> u8
  Instructions:
      0: UNKNOWN_OP_71
      1: store , r2
      2: r3 = 10
      3: r4 = load 
      4: CALL_INDIRECT
      5: return

Function lambda_examples.lambda_basic_test.test_lambda_multiple_2(x: u8) -> u8
  @smc
  Instructions:
      0: r0 = load x
      1: r1 = 5
      2: r2 = r0 + r1
      3: r3 = load x
      4: r4 = 5
      5: r5 = r3 + r4
      6: return r5

Function examples.lambda_basic_test.test_lambda_multiple() -> u8
  @smc
  Locals:
    r1 = add: |u8| -> u8
    r3 = a: u16
    r7 = b: u16
  Instructions:
      0: UNKNOWN_OP_71
      1: store , r2
      2: r4 = 10
      3: r5 = load 
      4: CALL_INDIRECT
      5: store , r6
      6: r8 = 20
      7: r9 = load 
      8: CALL_INDIRECT
      9: store , r10
     10: r11 = load a
     11: r12 = load b
     12: r13 = r11 + r12
     13: return

Function examples.lambda_basic_test.main() -> void
  @smc
  Locals:
    r1 = t1: u16
    r4 = t2: u16
    r6 = t3: u16
    r8 = t4: u16
  Instructions:
      0: r2 = 10
      1: r3 = call add_five_traditional
      2: store , r3
      3: r5 = call test_lambda_basic
      4: store , r5
      5: r7 = call test_lambda_direct
      6: store , r7
      7: r9 = call test_lambda_multiple
      8: store , r9
      9: return

