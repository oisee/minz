; MinZ Intermediate Representation (MIR)
; Module: main

Function .Users.alice.dev.minz-ts.examples.test_abi.smc_function(x: u8, y: u8) -> u8
  @smc
  Instructions:
      0: UNKNOWN_OP_30 ; Load from anchor x$imm0
      1: UNKNOWN_OP_30 ; Load from anchor y$imm0
      2: r5 = r3 + r4
      3: return r5

Function .Users.alice.dev.minz-ts.examples.test_abi.register_function(a: u8, b: u8) -> u8
  @smc
  Instructions:
      0: r3 = load a
      1: r4 = load b
      2: r5 = r3 * r4
      3: return r5

Function .Users.alice.dev.minz-ts.examples.test_abi.mapped_function(x: u8, y: u8) -> u8
  @smc
  Instructions:
      0: r3 = load x
      1: r4 = load y
      2: r5 = r3 - r4
      3: return r5

Function .Users.alice.dev.minz-ts.examples.test_abi.stack_function(data: u16, count: u8) -> u16
  @smc
  Instructions:
      0: r3 = load data
      1: r4 = load count
      2: r5 = r3 + r4
      3: return r5

Function .Users.alice.dev.minz-ts.examples.test_abi.external_function(ptr: *u8, size: u16) -> void
  @smc
  Locals:
    r3 = result1: u16
    r7 = result2: u16
    r11 = result3: u16
    r15 = result4: u16
  Instructions:
      0: r6 = call smc_function
      1: store , r6
      2: r10 = call register_function
      3: store , r10
      4: r14 = call mapped_function
      5: store , r14
      6: r18 = call stack_function
      7: store , r18
      8: return

