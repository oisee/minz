; MinZ Intermediate Representation (MIR)
; Module: main

Function .Users.alice.dev.minz-ts.examples.editor_demo.set_border(color: u8) -> void
  @smc
  Instructions:
      0: return

Function .Users.alice.dev.minz-ts.examples.editor_demo.clear_screen() -> void
  @smc
  Instructions:
      0: return

Function .Users.alice.dev.minz-ts.examples.editor_demo.set_attr(x: u8, y: u8) -> void
  @smc
  Instructions:
      0: return

Function .Users.alice.dev.minz-ts.examples.editor_demo.set_pixel(x: u8, y: u8) -> void
  @smc
  Locals:
    r3 = addr: u16
  Instructions:
      0: r4 = 16384
      1: UNKNOWN_OP_30 ; Load from anchor y$imm0
      2: r6 = 32
      3: r7 = r5 * r6
      4: r8 = r4 + r7
      5: UNKNOWN_OP_30 ; Load from anchor x$imm0
      6: r10 = 3
      7: SHR
      8: r12 = r8 + r11
      9: store , r12
     10: return

Function .Users.alice.dev.minz-ts.examples.editor_demo.delay(loops: u16) -> void
  @smc
  Instructions:
      0: return

Function .Users.alice.dev.minz-ts.examples.editor_demo.draw_test_pattern(start_x: u8, start_y: u8) -> void
  @smc
  Locals:
    r3 = i: u8
    r8 = j: u8
  Instructions:
      0: r4 = 0
      1: store , r4
      2: loop_1:
      3: r5 = load i
      4: r6 = 8
      5: r7 = r5 < r6
      6: jump_if_not r7, end_loop_2
      7: r9 = 0
      8: store , r9
      9: loop_3:
     10: r10 = load j
     11: r11 = 8
     12: r12 = r10 < r11
     13: jump_if_not r12, end_loop_4
     14: r13 = load i
     15: r14 = load j
     16: r15 = r13 + r14
     17: r16 = 1
     18: r17 = r15 & r16
     19: r18 = 0
     20: r19 = r17 == r18
     21: jump_if_not r19, else_5
     22: jump end_if_6
     23: else_5:
     24: end_if_6:
     25: jump loop_3
     26: end_loop_4:
     27: jump loop_1
     28: end_loop_2:
     29: return

Function .Users.alice.dev.minz-ts.examples.editor_demo.animate_border(cycles: u8) -> void
  @smc
  Locals:
    r2 = i: u8
  Instructions:
      0: r3 = 0
      1: store , r3
      2: loop_7:
      3: r4 = load i
      4: UNKNOWN_OP_30 ; Load from anchor cycles$imm0
      5: r6 = r4 < r5
      6: jump_if_not r6, end_loop_8
      7: jump loop_7
      8: end_loop_8:
      9: return

Function .Users.alice.dev.minz-ts.examples.editor_demo.setup_screen() -> void
  @smc
  Instructions:
      0: return

Function .Users.alice.dev.minz-ts.examples.editor_demo.mnist_main() -> u8
  @smc
  Instructions:
      0: r2 = call set_border
      1: r3 = call setup_screen
      2: r6 = call draw_test_pattern
      3: return

Function .Users.alice.dev.minz-ts.examples.editor_demo.main() -> void
  @smc
  Locals:
    r1 = result: u16
  Instructions:
      0: r2 = call mnist_main
      1: store , r2
      2: return

