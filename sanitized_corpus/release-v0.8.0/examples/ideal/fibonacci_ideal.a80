; MinZ ideal code - fibonacci.minz
; Iterative Fibonacci with perfect SMC

    ORG $8000

; Function: fibonacci(n: u8) -> u16
fibonacci:
fibonacci_param_n:
    LD A, #00      ; SMC parameter n (u8)
    OR A           ; Check if n == 0
    JR Z, fib_ret_0
    DEC A          ; Check if n == 1
    JR Z, fib_ret_1
    
    ; n >= 2: compute fibonacci
    LD B, A        ; B = counter (n_1)
    LD HL, 0       ; a = 0
    LD DE, 1       ; b = 1
    
fib_loop:
    PUSH HL        ; Save a
    ADD HL, DE     ; HL = a + b
    POP DE         ; DE = old a (becomes new b)
    DJNZ fib_loop  ; Decrement B and loop if not zero
    
    RET            ; Result in HL

fib_ret_0:
    LD HL, 0
    RET
    
fib_ret_1:
    LD HL, 1
    RET

; Function: main() -> void
main:
    ; Calculate fibonacci(10)
    LD A, 10
    LD (fibonacci_param_n + 1), A
    
    CALL fibonacci
    ; Result is in HL
    RET

    END main