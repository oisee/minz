; MinZ generated code
; Generated: 2025-07-28 14:23:48


; Code section
    ORG $8000

; Using hierarchical register allocation (physical → shadow → memory)

; Function: ...test_tsmc_ref.test_ref
_test_tsmc_ref_test_ref:
; Using absolute addressing for locals
    PUSH IX
    LD IX, SP
    ; Load parameters from registers
    LD ($F002), HL    ; Virtual register 1 to memory
    ; r2 = param ptr
    ; Load parameter ptr
    ; r3 = *r2
    ; Register 2 already in HL
    LD A, (HL)
    ; Register 3 already in A
    ; return r3
    LD SP, IX
    POP IX
    RET
; Using hierarchical register allocation (physical → shadow → memory)

; Function: ...test_tsmc_ref.main
_test_tsmc_ref_main:
; IsSMCDefault=true, IsSMCEnabled=true
; Using absolute addressing for locals (SMC style)
    ; r2 = 42
    LD A, 42
    LD B, A         ; Store to physical register B
    ; store , r2
    LD ($F002), HL
    ; r4 = load x
    LD HL, ($F002)
    ; unknown op 61
    ; Address-of operation for register r4
    LD HL, $8008  ; Variable address (placeholder)
    ; r6 = call test_ref
    ; Call to test_ref (args: 1)
    ; Register-based parameter passing
    ; Parameter ptr in HL
    ; Found function, UsesTrueSMC=false
    CALL test_ref
    ; store , r6
    LD ($F006), HL
    ; return
    RET

    END main
