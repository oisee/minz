; MinZ generated code
; Generated: 2025-08-01 21:44:36


; Code section
    ORG $8000

; Using hierarchical register allocation (physical → shadow → memory)

; Function: .Users.alice.dev.minz-ts.examples.interface_simple.Circle.draw
.Users_alice_dev_minz_ts_examples_interface_simple_Circle_draw:
; TRUE SMC function with immediate anchors
self_immOP:
    LD A, 0        ; self anchor (will be patched)
self_imm0 EQU self_immOP+1
    ; Register 2 already in A
    ; return
    RET
; Using hierarchical register allocation (physical → shadow → memory)

; Function: .Users.alice.dev.minz-ts.examples.interface_simple.main
.Users_alice_dev_minz_ts_examples_interface_simple_main:
; IsSMCDefault=true, IsSMCEnabled=true
; Using absolute addressing for locals (SMC style)
    PUSH DE
    ; Allocate struct Circle
    LD HL, -1
    ADD HL, SP
    LD SP, HL
    EX DE, HL
    LD HL, SP
    ; r3 = 5
    LD A, 5
    LD C, A         ; Store to physical register C
    ; Store to Circle.radius
    PUSH HL
    POP DE
    LD (DE), L
    INC DE
    LD (DE), H
    ; store , r2
    LD ($F002), HL
