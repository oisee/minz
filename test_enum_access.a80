; MinZ generated code
; Generated: 2025-08-17 04:05:25


; Code section
    ORG $8000

; Using hierarchical register allocation (physical → shadow → memory)

; Function: test_enum_access.main
enum_access_main:
; IsSMCDefault=true, IsSMCEnabled=true
; Using absolute addressing for locals (SMC style)
    ; r2 = 0
    LD A, 0
    ; Register 2 already in A
    ; store s, r2
    LD ($F002), HL
    ; r3 = load s
    LD HL, ($F002)
    ; Call runtime print_u8_decimal
    ; Call to print_u8_decimal (args: 1)
    ; Stack-based parameter passing
    PUSH HL       ; Argument 0
    CALL print_u8_decimal
    LD ($F000), HL    ; Virtual register 0 to memory
    ; return
    RET

; Runtime print helper functions
print_u8_decimal:
    LD H, 0            ; HL = A (zero extend)
    LD L, A
    CALL print_u16_decimal
    RET

print_u16_decimal:
    LD BC, -10000
    LD DE, -1000
    CALL print_digit
    LD BC, -1000
    LD DE, -100
    CALL print_digit
    LD BC, -100
    LD DE, -10
    CALL print_digit
    LD BC, -10
    LD DE, -1
    CALL print_digit
    LD A, L
    ADD A, '0'         ; Convert to ASCII
    RST 16             ; Print last digit
    RET


; Standard library routines
temp_result:
    DW 0           ; Temporary storage for function results


    END main
