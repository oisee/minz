; MinZ generated code
; Generated: 2025-08-24 21:13:19


; Code section
    ORG $8000

; Using hierarchical register allocation (physical → shadow → memory)

; Function: test_array_opt.main
array_opt_main:
; IsSMCDefault=true, IsSMCEnabled=true
; Using absolute addressing for locals (SMC style)
    PUSH BC
    PUSH DE
    ; Array literal [[10 20 30 40 50]] -> DB directive
    LD HL, array_data_0
    LD ($F004), HL    ; Virtual register 2 to memory
    ; Array literal data will be at array_data_0
    ; Store element 0
    PUSH HL
    LD A, ($F000)     ; Virtual register 0 from memory
    LD E, A
    XOR D, D    ; Optimized: was LD D, 0
    POP HL
    ADD HL, DE
    LD (HL), 0    ; TODO: Need value source
    ; Store element 1
    LD A, D
    LD ($0000), A
    ; Store element 2
    EXX               ; Switch to shadow registers
    LD A, B         ; From shadow B' (now active)
    EXX               ; Switch back to main registers
    LD ($0000), A
    ; Store element 3
    EXX               ; Switch to shadow registers
    LD A, D         ; From shadow D' (now active)
    EXX               ; Switch back to main registers
    LD ($0000), A
    ; Store element 4
    LD A, ($F02C)     ; Virtual register 22 from memory
    LD ($0000), A
    ; Load array element (u8)
    PUSH HL
    LD A, L
    LD E, A
    XOR D, D    ; Optimized: was LD D, 0
    POP HL
    ADD HL, DE
    LD A, (HL)
    LD H, A         ; Store to physical register H
    ; Call runtime print_u8_decimal
    ; Call to print_u8_decimal (args: 1)
    ; Stack-based parameter passing
    PUSH HL       ; Argument 0
    CALL print_u8_decimal
    LD ($F000), HL    ; Virtual register 0 to memory
    ; return
    POP DE
    POP BC
    RET

; Runtime print helper functions
print_u8_decimal:
    LD H, 0            ; HL = A (zero extend)
    LD L, A
    CALL print_u16_decimal
    RET

print_u16_decimal:
    LD BC, -10000
    LD DE, -1000
    CALL print_digit
    LD BC, -1000
    LD DE, -100
    CALL print_digit
    LD BC, -100
    LD DE, -10
    CALL print_digit
    LD BC, -10
    LD DE, -1
    CALL print_digit
    LD A, L
    ADD A, '0'         ; Convert to ASCII
    RST 16             ; Print last digit
    RET


; Standard library routines
temp_result:
    DW 0           ; Temporary storage for function results


; Array literal data
array_data_0:
    ; Array literal [[10 20 30 40 50]] -> DB directive
    DB 10, 20, 30, 40, 50

    END main


; Assembly peephole optimization: 1 patterns applied