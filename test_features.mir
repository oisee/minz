; MinZ Intermediate Representation (MIR)
; Module: main

Function test_all_new_features.test_pointer_ops() -> void
  @smc
  Locals:
    r1 = buffer: [10]u8
    r2 = ptr: *u8
  Instructions:
      0: r3 = load buffer
      1: r4 = 0
      2: LOAD_INDEX ; Load array element (u8)
      3: ADDR
      4: store ptr, r6
      5: r7 = 65
      6: r8 = load ptr
      7: r9 = 0
      8: r10 = r8 + r9 ; Calculate array element address
      9: STORE_PTR ; Store to array[index] (u8)
     10: r11 = 66
     11: r12 = load ptr
     12: r13 = 1
     13: r14 = r12 + r13 ; Calculate array element address
     14: STORE_PTR ; Store to array[index] (u8)
     15: r15 = load ptr
     16: r16 = 0
     17: LOAD_INDEX ; Load array element (u8)
     18: r0 = call print_u8_decimal ; Call runtime print_u8_decimal
     19: r18 = load ptr
     20: r19 = 1
     21: LOAD_INDEX ; Load array element (u8)
     22: r0 = call print_u8_decimal ; Call runtime print_u8_decimal
     23: return

Function test_all_new_features.test_enums() -> void
  @smc
  Locals:
    r1 = s: u16
  Instructions:
      0: r2 = 1
      1: store s, r2
      2: r3 = load s
      3: r0 = call print_u8_decimal ; Call runtime print_u8_decimal
      4: return

Function test_all_new_features.main() -> void
  @smc
  Instructions:
      0: r1 = 16
      1: r0 = call print_u8_decimal ; Call runtime print_u8_decimal
      2: r2 = call test_all_new_features.test_pointer_ops
      3: r3 = call test_all_new_features.test_enums
      4: return

