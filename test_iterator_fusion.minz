// Test iterator chain fusion - multiple operations in single loop
// This demonstrates that .map().filter().forEach() compiles to ONE loop

fun main() -> void {
    let numbers: [u8; 10] = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
    
    @print("=== Fused Iterator Chain ===\n");
    @print("Original: 1-10, doubled, keep >10, print:\n");
    
    // This entire chain should compile to a SINGLE loop!
    numbers
        .map(double)        // Double each number
        .filter(gt_10)      // Keep only > 10
        .forEach(print_u8); // Print results
    
    @print("\n=== Expected output: 12 14 16 18 20 ===");
}

fun double(x: u8) -> u8 {
    return x * 2;
}

fun gt_10(x: u8) -> bool {
    return x > 10;
}

fun print_u8(x: u8) -> void {
    // Placeholder - would print the number
}