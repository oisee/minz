; MinZ generated code
; Generated: 2025-07-07 21:41:41


; Code section
    ORG $8000


; Function: screen_addr
; IsSMCDefault=true, IsSMCEnabled=true
screen_addr:
screen_addr_param_x EQU screen_addr + 1
    LD A, #00      ; Parameter x
screen_addr_param_y EQU screen_addr + 3
    LD A, #00      ; Parameter y
    LD A, (screen_addr_param_y)
    LD (IX-8), A
    ; r5 = 192
    LD A, 192
    LD (IX-10), A
    ; unknown op 30
    LD L, (IX-8)
    LD H, (IX-7)
    PUSH HL
    LD L, (IX-10)
    LD H, (IX-9)
    POP DE
    LD A, L
    AND E
    LD L, A
    LD A, H
    AND D
    LD H, A
    LD (IX-12), L
    LD (IX-11), H
    ; store , r6
    LD L, (IX-12)
    LD H, (IX-11)
    LD (IX-6), L
    LD (IX-5), H
    LD A, (screen_addr_param_y)
    LD (IX-16), A
    ; r9 = 56
    LD A, 56
    LD (IX-18), A
    ; unknown op 30
    LD L, (IX-16)
    LD H, (IX-15)
    PUSH HL
    LD L, (IX-18)
    LD H, (IX-17)
    POP DE
    LD A, L
    AND E
    LD L, A
    LD A, H
    AND D
    LD H, A
    LD (IX-20), L
    LD (IX-19), H
    ; r11 = 2
    LD A, 2
    LD (IX-22), A
    ; unknown op 34
    ; TODO: Shift left
    LD L, (IX-20)
    LD H, (IX-19)
    LD (IX-24), L
    LD (IX-23), H
    ; store , r12
    LD L, (IX-24)
    LD H, (IX-23)
    LD (IX-14), L
    LD (IX-13), H
    LD A, (screen_addr_param_y)
    LD (IX-28), A
    ; r15 = 7
    LD A, 7
    LD (IX-30), A
    ; unknown op 30
    LD L, (IX-28)
    LD H, (IX-27)
    PUSH HL
    LD L, (IX-30)
    LD H, (IX-29)
    POP DE
    LD A, L
    AND E
    LD L, A
    LD A, H
    AND D
    LD H, A
    LD (IX-32), L
    LD (IX-31), H
    ; r17 = 8
    LD A, 8
    LD (IX-34), A
    ; unknown op 34
    ; TODO: Shift left
    LD L, (IX-32)
    LD H, (IX-31)
    LD (IX-36), L
    LD (IX-35), H
    ; store , r18
    LD L, (IX-36)
    LD H, (IX-35)
    LD (IX-26), L
    LD (IX-25), H
    ; r20 = 16384
    LD HL, 16384
    LD (IX-40), L
    LD (IX-39), H
    ; r21 = load y_low
    LD L, (IX-42)
    LD H, (IX-41)
    LD (IX-42), L
    LD (IX-41), H
    ; unknown op 31
    LD L, (IX-40)
    LD H, (IX-39)
    PUSH HL
    LD L, (IX-42)
    LD H, (IX-41)
    POP DE
    LD A, L
    OR E
    LD L, A
    LD A, H
    OR D
    LD H, A
    LD (IX-44), L
    LD (IX-43), H
    ; r23 = load y_mid
    LD L, (IX-46)
    LD H, (IX-45)
    LD (IX-46), L
    LD (IX-45), H
    ; unknown op 31
    LD L, (IX-44)
    LD H, (IX-43)
    PUSH HL
    LD L, (IX-46)
    LD H, (IX-45)
    POP DE
    LD A, L
    OR E
    LD L, A
    LD A, H
    OR D
    LD H, A
    LD (IX-48), L
    LD (IX-47), H
    ; r25 = load y_high
    LD L, (IX-50)
    LD H, (IX-49)
    LD (IX-50), L
    LD (IX-49), H
    ; r26 = 5
    LD A, 5
    LD (IX-52), A
    ; unknown op 34
    ; TODO: Shift left
    LD L, (IX-50)
    LD H, (IX-49)
    LD (IX-54), L
    LD (IX-53), H
    ; unknown op 31
    LD L, (IX-48)
    LD H, (IX-47)
    PUSH HL
    LD L, (IX-54)
    LD H, (IX-53)
    POP DE
    LD A, L
    OR E
    LD L, A
    LD A, H
    OR D
    LD H, A
    LD (IX-56), L
    LD (IX-55), H
    LD A, (screen_addr_param_x)
    LD (IX-58), A
    ; r30 = 3
    LD A, 3
    LD (IX-60), A
    ; unknown op 35
    ; TODO: Shift right
    LD L, (IX-58)
    LD H, (IX-57)
    LD (IX-62), L
    LD (IX-61), H
    ; unknown op 31
    LD L, (IX-56)
    LD H, (IX-55)
    PUSH HL
    LD L, (IX-62)
    LD H, (IX-61)
    POP DE
    LD A, L
    OR E
    LD L, A
    LD A, H
    OR D
    LD H, A
    LD (IX-64), L
    LD (IX-63), H
    ; store , r32
    LD L, (IX-64)
    LD H, (IX-63)
    LD (IX-38), L
    LD (IX-37), H
    ; r33 = load addr
    LD L, (IX-66)
    LD H, (IX-65)
    LD (IX-66), L
    LD (IX-65), H
    ; return r33
    LD L, (IX-66)
    LD H, (IX-65)
    LD SP, IX
    POP IX
    RET

; Function: draw_sprite
; IsSMCDefault=true, IsSMCEnabled=true
draw_sprite:
draw_sprite_param_x EQU draw_sprite + 1
    LD A, #00      ; Parameter x
draw_sprite_param_y EQU draw_sprite + 3
    LD A, #00      ; Parameter y
draw_sprite_param_data EQU draw_sprite + 5
    LD HL, #0000   ; Parameter data
    ; r5 = 0
    LD A, 0
    LD (IX-10), A
    ; store , r5
    LD L, (IX-10)
    LD H, (IX-9)
    LD (IX-8), L
    LD (IX-7), H
    ; loop_1:
loop_1:
    ; r6 = load row
    LD L, (IX-12)
    LD H, (IX-11)
    LD (IX-12), L
    LD (IX-11), H
    ; r7 = 8
    LD A, 8
    LD (IX-14), A
    ; r8 = r6 < r7
    LD L, (IX-12)
    LD H, (IX-11)
    PUSH HL
    LD L, (IX-14)
    LD H, (IX-13)
    POP DE
    OR A      ; Clear carry
    SBC HL, DE
    JP M, .L1
    LD HL, 0
    JP .L2
.L1:
    LD HL, 1
.L2:
    LD (IX-16), L
    LD (IX-15), H
    ; jump_if_not r8, end_loop_2
    LD A, (IX-16)
    OR A
    JP Z, end_loop_2
    LD A, (draw_sprite_param_x)
    LD (IX-20), A
    LD A, (draw_sprite_param_y)
    LD (IX-22), A
    ; r12 = load row
    LD L, (IX-24)
    LD H, (IX-23)
    LD (IX-24), L
    LD (IX-23), H
    ; r13 = r11 + r12
    LD L, (IX-22)
    LD H, (IX-21)
    PUSH HL
    LD L, (IX-24)
    LD H, (IX-23)
    POP DE
    ADD HL, DE
    LD (IX-26), L
    LD (IX-25), H
    ; r14 = call screen_addr
    CALL screen_addr
    LD (IX-28), L
    LD (IX-27), H
    ; store , r14
    LD L, (IX-28)
    LD H, (IX-27)
    LD (IX-18), L
    LD (IX-17), H
    LD HL, (draw_sprite_param_data)
    LD (IX-32), L
    LD (IX-31), H
    ; store , r16
    LD L, (IX-32)
    LD H, (IX-31)
    LD (IX-30), L
    LD (IX-29), H
    ; jump loop_1
    JP loop_1
    ; end_loop_2:
end_loop_2:
    ; return
    LD SP, IX
    POP IX
    RET

; Function: main
; IsSMCDefault=true, IsSMCEnabled=true
main:
    ; return
    RET

    END main
