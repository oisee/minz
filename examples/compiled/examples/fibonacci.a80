; MinZ generated code
; Generated: 2025-07-07 21:41:40


; Code section
    ORG $8000


; Function: fibonacci
; IsSMCDefault=true, IsSMCEnabled=true
fibonacci:
fibonacci_param_n EQU fibonacci + 1
    LD A, #00      ; Parameter n
    LD A, (fibonacci_param_n)
    LD (IX-4), A
    ; r3 = 1
    LD A, 1
    LD (IX-6), A
    ; r4 = r2 <= r3
    LD L, (IX-4)
    LD H, (IX-3)
    PUSH HL
    LD L, (IX-6)
    LD H, (IX-5)
    POP DE
    OR A      ; Clear carry
    SBC HL, DE
    JP M, .L1
    JP Z, .L1
    LD HL, 0
    JP .L2
.L1:
    LD HL, 1
.L2:
    LD (IX-8), L
    LD (IX-7), H
    ; jump_if_not r4, else_1
    LD A, (IX-8)
    OR A
    JP Z, else_1
    LD A, (fibonacci_param_n)
    LD (IX-10), A
    ; return r5
    LD L, (IX-10)
    LD H, (IX-9)
    LD SP, IX
    POP IX
    RET
    ; jump end_if_2
    JP end_if_2
    ; else_1:
else_1:
    ; end_if_2:
end_if_2:
    ; r7 = 0
    LD A, 0
    LD (IX-14), A
    ; store , r7
    LD L, (IX-14)
    LD H, (IX-13)
    LD (IX-12), L
    LD (IX-11), H
    ; r9 = 1
    LD A, 1
    LD (IX-18), A
    ; store , r9
    LD L, (IX-18)
    LD H, (IX-17)
    LD (IX-16), L
    LD (IX-15), H
    ; r11 = 2
    LD A, 2
    LD (IX-22), A
    ; store , r11
    LD L, (IX-22)
    LD H, (IX-21)
    LD (IX-20), L
    LD (IX-19), H
    ; loop_3:
loop_3:
    ; r12 = load i
    LD L, (IX-24)
    LD H, (IX-23)
    LD (IX-24), L
    LD (IX-23), H
    LD A, (fibonacci_param_n)
    LD (IX-26), A
    ; r14 = r12 <= r13
    LD L, (IX-24)
    LD H, (IX-23)
    PUSH HL
    LD L, (IX-26)
    LD H, (IX-25)
    POP DE
    OR A      ; Clear carry
    SBC HL, DE
    JP M, .L3
    JP Z, .L3
    LD HL, 0
    JP .L4
.L3:
    LD HL, 1
.L4:
    LD (IX-28), L
    LD (IX-27), H
    ; jump_if_not r14, end_loop_4
    LD A, (IX-28)
    OR A
    JP Z, end_loop_4
    ; r16 = load a
    LD L, (IX-32)
    LD H, (IX-31)
    LD (IX-32), L
    LD (IX-31), H
    ; r17 = load b
    LD L, (IX-34)
    LD H, (IX-33)
    LD (IX-34), L
    LD (IX-33), H
    ; r18 = r16 + r17
    LD L, (IX-32)
    LD H, (IX-31)
    PUSH HL
    LD L, (IX-34)
    LD H, (IX-33)
    POP DE
    ADD HL, DE
    LD (IX-36), L
    LD (IX-35), H
    ; store , r18
    LD L, (IX-36)
    LD H, (IX-35)
    LD (IX-30), L
    LD (IX-29), H
    ; jump loop_3
    JP loop_3
    ; end_loop_4:
end_loop_4:
    ; r19 = load b
    LD L, (IX-38)
    LD H, (IX-37)
    LD (IX-38), L
    LD (IX-37), H
    ; return r19
    LD L, (IX-38)
    LD H, (IX-37)
    LD SP, IX
    POP IX
    RET

; Function: main
; IsSMCDefault=true, IsSMCEnabled=true
main:
    ; r2 = 10
    LD A, 10
    LD (IX-4), A
    ; r3 = call fibonacci
    CALL fibonacci
    LD (IX-6), L
    LD (IX-5), H
    ; store , r3
    LD L, (IX-6)
    LD H, (IX-5)
    LD (IX-2), L
    LD (IX-1), H
    ; return
    LD SP, IX
    POP IX
    RET

    END main
