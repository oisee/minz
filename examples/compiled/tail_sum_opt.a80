; MinZ generated code
; Generated: 2025-07-07 21:36:42


; Code section
    ORG $8000


; Function: sum_tail
; IsSMCDefault=true, IsSMCEnabled=true
sum_tail:
sum_tail_param_n EQU sum_tail + 1
    LD HL, #0000   ; Parameter n
sum_tail_param_acc EQU sum_tail + 4
    LD HL, #0000   ; Parameter acc
    ; Recursive function - will need context save/restore
sum_tail_start:
    LD HL, (sum_tail_param_n)
    LD (IX-6), L
    LD (IX-5), H
    ; sum_tail_start:
sum_tail_start:
    ; XOR A,A (optimized from LD A,0)
    XOR A
    LD (IX-8), A
    ; r5 = r3 == r4
    LD L, (IX-6)
    LD H, (IX-5)
    PUSH HL
    LD L, (IX-8)
    LD H, (IX-7)
    POP DE
    OR A      ; Clear carry
    SBC HL, DE
    JP Z, .L1
    LD HL, 0
    JP .L2
.L1:
    LD HL, 1
.L2:
    LD (IX-10), L
    LD (IX-9), H
    ; jump_if_not r5, else_1
    LD A, (IX-10)
    OR A
    JP Z, else_1
    LD HL, (sum_tail_param_acc)
    LD (IX-12), L
    LD (IX-11), H
    ; return r6
    LD L, (IX-12)
    LD H, (IX-11)
    LD SP, IX
    POP IX
    RET
    ; else_1:
else_1:
    LD HL, (sum_tail_param_n)
    LD (IX-14), L
    LD (IX-13), H
    LD HL, (sum_tail_param_acc)
    LD (IX-20), L
    LD (IX-19), H
    LD HL, (sum_tail_param_n)
    LD (IX-22), L
    LD (IX-21), H
    ; Tail recursion optimized
    JP sum_tail_start
    RET

; Function: main
; IsSMCDefault=true, IsSMCEnabled=true
main:
    ; r4 = call sum_tail
    CALL sum_tail
    LD (IX-8), L
    LD (IX-7), H
    ; store , r4
    LD L, (IX-8)
    LD H, (IX-7)
    LD (IX-2), L
    LD (IX-1), H
    ; return
    LD SP, IX
    POP IX
    POP HL
    POP DE
    POP BC
    POP AF
    RET

    END main
