// Example program demonstrating module usage
import std.mem;
import zx.screen;
import zx.input;
import game.player as player;
import game.sprites;

// Game constants
const GAME_SPEED: u8 = 2;

fun main() -> void {
    // Initialize screen
    screen.clear(screen.BLACK, screen.BLUE, true, false);
    screen.set_border(screen.BLUE);
    
    // Create player
    let mut p = player.create(128, 96);
    
    // Draw initial UI
    draw_ui();
    
    // Main game loop
    loop {
        // Check for quit
        if input.is_key_pressed(input.KEY_Q) {
            break;
        }
        
        // Update player based on input
        if input.is_key_pressed(input.KEY_O) {
            player.move_left(&mut p, GAME_SPEED);
        }
        if input.is_key_pressed(input.KEY_P) {
            player.move_right(&mut p, GAME_SPEED);
        }
        if input.is_key_pressed(input.KEY_Q) {
            player.move_up(&mut p, GAME_SPEED);
        }
        if input.is_key_pressed(input.KEY_A) {
            player.move_down(&mut p, GAME_SPEED);
        }
        
        // Clear old position and draw new
        sprites.clear(&p.old_sprite);
        player.draw(&p);
        
        // Small delay
        delay(100);
    }
    
    // Game over
    screen.clear(screen.WHITE, screen.BLACK, false, false);
}

fun draw_ui() -> void {
    // Draw border
    screen.draw_rect(0, 0, 255, 191);
    
    // Draw score area
    screen.draw_rect(0, 0, 255, 16);
}

fun delay(count: u16) -> void {
    let mut i: u16 = 0;
    while i < count {
        // Simple delay loop
        asm("nop");
        i = i + 1;
    }
}