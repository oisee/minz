// ZX Spectrum screen and border color control
const BORDER_PORT: u8 = 0xFE;
const ATTR_START: u16 = 0x5800;
const ATTR_SIZE: u16 = 768;

// Set border color (0-7)
fn set_border(color: u8) -> void {
    asm("
        ld a, {0}
        out ($fe), a
    " : : "r"(color));
}

// Fill screen attributes with a color
fn fill_screen(ink: u8, paper: u8, bright: bool) -> void {
    let attr: u8 = ink | (paper << 3);
    if bright {
        attr = attr | 0x40;
    }
    
    let mut addr: u16 = ATTR_START;
    let end: u16 = ATTR_START + ATTR_SIZE;
    
    while addr < end {
        asm("
            ld a, {0}
            ld ({1}), a
        " : : "r"(attr), "r"(addr));
        addr = addr + 1;
    }
}

fn main() -> void {
    // Blue border
    set_border(1);
    
    // Yellow on blue screen
    fill_screen(6, 1, true);
}