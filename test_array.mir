; MinZ Intermediate Representation (MIR)
; Module: main

Function test_array_literal_simple.main() -> void
  @smc
  Locals:
    r1 = numbers: [5]u8
  Instructions:
      0: r3 = 10
      1: r4 = 20
      2: r5 = 30
      3: r6 = 40
      4: r7 = 50
      5: ARRAY_INIT ; Array initializer with 5 elements
      6: ARRAY_ELEMENT ; Initialize array[0]
      7: ARRAY_ELEMENT ; Initialize array[1]
      8: ARRAY_ELEMENT ; Initialize array[2]
      9: ARRAY_ELEMENT ; Initialize array[3]
     10: ARRAY_ELEMENT ; Initialize array[4]
     11: r8 = 10
     12: r9 = load numbers ; Load array numbers base address
     13: STORE_INDEX ; Store element 0
     14: r10 = 20
     15: r11 = load numbers ; Load array numbers base address
     16: r12 = 1
     17: r13 = r11 + r12
     18: STORE_DIRECT ; Store element 1
     19: r14 = 30
     20: r15 = load numbers ; Load array numbers base address
     21: r16 = 2
     22: r17 = r15 + r16
     23: STORE_DIRECT ; Store element 2
     24: r18 = 40
     25: r19 = load numbers ; Load array numbers base address
     26: r20 = 3
     27: r21 = r19 + r20
     28: STORE_DIRECT ; Store element 3
     29: r22 = 50
     30: r23 = load numbers ; Load array numbers base address
     31: r24 = 4
     32: r25 = r23 + r24
     33: STORE_DIRECT ; Store element 4
     34: r26 = load numbers
     35: r27 = 0
     36: LOAD_INDEX ; Load array element (u8)
     37: r0 = call print_u8_decimal ; Call runtime print_u8_decimal
     38: return

