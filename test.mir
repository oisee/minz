; MinZ Intermediate Representation (MIR)
; Module: main

; Globals:
;   test_global_fixed.g_byte: u8
;   test_global_fixed.g_word: u16
;   test_global_fixed.g_flag: bool

Function test_global_fixed.main() -> void
  @smc
  Instructions:
      0: r1 = load g_byte
      1: r2 = 42
      2: r3 = r1 == r2
      3: jump_if_not r3, else_1
      4: UNKNOWN_OP_88
      5: UNKNOWN_OP_86 ; Print "g_byte OK: " (11 chars via loop)
      6: UNKNOWN_OP_87 ; Direct print "
" (1 chars)
      7: jump end_if_2
      8: else_1:
      9: end_if_2:
     10: r5 = load g_word
     11: r6 = 4660
     12: r7 = r5 == r6
     13: jump_if_not r7, else_3
     14: UNKNOWN_OP_88
     15: UNKNOWN_OP_86 ; Print "g_word OK: " (11 chars via loop)
     16: UNKNOWN_OP_87 ; Direct print "
" (1 chars)
     17: jump end_if_4
     18: else_3:
     19: end_if_4:
     20: r9 = load g_flag
     21: jump_if_not r9, else_5
     22: UNKNOWN_OP_88
     23: UNKNOWN_OP_86 ; Print "g_flag OK
" (10 chars via loop)
     24: jump end_if_6
     25: else_5:
     26: end_if_6:
     27: return

