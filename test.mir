; MinZ Intermediate Representation (MIR)
; Module: main

Function test_interface_method.Circle.draw$Circle(self: test_interface_method.Circle) -> void
  @smc
  Instructions:
      0: LOAD_PARAM
      1: LOAD_FIELD ; Load field radius (offset 0)
      2: r0 = call print_u8_decimal ; Call runtime print_u8_decimal
      3: return

Function test_interface_method.main() -> void
  @smc
  Locals:
    r1 = c: u16
  Instructions:
      0: ALLOC ; Allocate struct Circle
      1: r3 = 5
      2: STORE_FIELD ; Store to Circle.radius
      3: store c, r2
      4: r4 = load c
      5: r5 = load c
      6: r6 = call test_interface_method.Circle.draw$Circle
      7: r7 = load c
      8: r8 = call test_interface_method.Circle.draw
      9: return

