; MinZ Intermediate Representation (MIR)
; Module: main

Function .Users.alice.dev.minz-ts.examples.lambda_smc_test.test_lambda_smc$add_0(x: u8) -> u8
  @smc
  Instructions:
      0: UNKNOWN_OP_31 ; Load from anchor x$imm0
      1: return

Function .Users.alice.dev.minz-ts.examples.lambda_smc_test.test_lambda_smc() -> u8
  @smc
  Locals:
    r1 = r1: u16
    r4 = r2: u16
  Instructions:
      0: r3 = call add
      1: store , r3
      2: r6 = call add
      3: store , r6
      4: return

Function .Users.alice.dev.minz-ts.examples.lambda_smc_test.add_traditional(x: u8) -> u8
  @smc
  Instructions:
      0: UNKNOWN_OP_31 ; Load from anchor x$imm0
      1: return

Function .Users.alice.dev.minz-ts.examples.lambda_smc_test.test_traditional() -> u8
  @smc
  Locals:
    r1 = r1: u16
    r4 = r2: u16
  Instructions:
      0: r3 = call add_traditional
      1: store , r3
      2: r6 = call add_traditional
      3: store , r6
      4: return

Function .Users.alice.dev.minz-ts.examples.lambda_smc_test.main() -> u8
  @smc
  Locals:
    r1 = lambda_result: u16
    r3 = traditional_result: u16
  Instructions:
      0: r2 = call test_lambda_smc
      1: store , r2
      2: r4 = call test_traditional
      3: store , r4
      4: return

