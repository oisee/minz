; MinZ Intermediate Representation (MIR)
; Module: main

Function .Users.alice.dev.minz-ts.examples.lambda_transform_poc.test_local_lambda$add5_0(x: u8) -> u8
  @smc
  Instructions:
      0: UNKNOWN_OP_31 ; Load from anchor x$imm0
      1: return

Function .Users.alice.dev.minz-ts.examples.lambda_transform_poc.test_local_lambda() -> u8
  @smc
  Locals:
    r1 = a: u16
    r4 = b: u16
  Instructions:
      0: r3 = call add5
      1: store , r3
      2: r6 = call add5
      3: store , r6
      4: return

Function .Users.alice.dev.minz-ts.examples.lambda_transform_poc.test_reuse$double_1(x: u8) -> u8
  @smc
  Instructions:
      0: UNKNOWN_OP_31 ; Load from anchor x$imm0
      1: return

Function .Users.alice.dev.minz-ts.examples.lambda_transform_poc.test_reuse$triple_2(x: u8) -> u8
  @smc
  Instructions:
      0: UNKNOWN_OP_31 ; Load from anchor x$imm0
      1: return

Function .Users.alice.dev.minz-ts.examples.lambda_transform_poc.test_reuse() -> u8
  @smc
  Locals:
    r1 = a: u16
    r4 = b: u16
    r7 = c: u16
  Instructions:
      0: r3 = call double
      1: store , r3
      2: r6 = call triple
      3: store , r6
      4: r9 = call double
      5: store , r9
      6: return

Function .Users.alice.dev.minz-ts.examples.lambda_transform_poc.test_no_capture$good_3(y: u8) -> u8
  @smc
  Instructions:
      0: UNKNOWN_OP_31 ; Load from anchor y$imm0
      1: return

Function .Users.alice.dev.minz-ts.examples.lambda_transform_poc.test_no_capture() -> u8
  @smc
  Locals:
    r1 = x: u8
  Instructions:
      0: r2 = 10
      1: store , r2
      2: r4 = call good
      3: return

Function .Users.alice.dev.minz-ts.examples.lambda_transform_poc.main() -> u8
  @smc
  Locals:
    r1 = r1: u16
    r3 = r2: u16
    r5 = r3: u16
  Instructions:
      0: r2 = call test_local_lambda
      1: store , r2
      2: r4 = call test_reuse
      3: store , r4
      4: r6 = call test_no_capture
      5: store , r6
      6: return

