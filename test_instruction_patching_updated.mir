; MinZ Intermediate Representation (MIR)
; Module: main

Function test_instruction_patching.add_numbers$u8$u8(a: u8, b: u8) -> u8
  @smc
  Instructions:
      0: LOAD_PARAM
      1: LOAD_PARAM
      2: r5 = r3 + r4
      3: return r5

Function test_instruction_patching.main() -> u8
  @smc
  Locals:
    r1 = temp: u8
    r9 = stored_result: u8
  Instructions:
      0: r2 = 10
      1: r3 = 20
      2: r4 = 10
      3: r5 = 20
      4: r6 = call test_instruction_patching.add_numbers$u8$u8
      5: r7 = 5
      6: r8 = r6 + r7
      7: store temp, r8
      8: r10 = 30
      9: r11 = 40
     10: r12 = 30
     11: r13 = 40
     12: r14 = call test_instruction_patching.add_numbers$u8$u8
     13: store stored_result, r14
     14: r15 = load temp
     15: r16 = load stored_result
     16: r17 = r15 + r16
     17: return r17

