// Test new extended types

fun test_new_types() -> void {
    // 24-bit integers for eZ80
    let addr24: u24 = 0x123456;
    let signed24: i24 = -8388608;
    
    // Fixed-point types
    let velocity: f8.8 = 1.5;        // 8-bit integer, 8-bit fraction
    let alpha: f.8 = 0.75;           // Pure fractional (0.0 to 0.996)
    let position: f16.8 = 100.25;    // 16-bit integer, 8-bit fraction  
    let precise: f8.16 = 10.123456;  // 8-bit integer, 16-bit fraction
    
    // Test arithmetic
    let new_velocity = velocity + 0.25;
    let mixed = position + velocity;  // Should promote to f16.8
    
    // Test assignments
    addr24 = 0xFFFFFF;  // Max 24-bit value
    signed24 = 8388607; // Max positive 24-bit signed
    
    alpha = 0.5;        // 50% opacity
    precise = 5.0;      // Whole number in fixed-point
}