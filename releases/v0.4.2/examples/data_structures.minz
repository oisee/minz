// Data Structures Example
struct Node {
    value: u8,
    next: *Node
}

struct Stack {
    data: [256]u8,
    top: u8
}

fun stack_init(stack: *Stack) -> void {
    stack->top = 0;
}

fun stack_push(stack: *Stack, value: u8) -> bool {
    if stack->top >= 255 {
        return false;
    }
    stack->data[stack->top] = value;
    stack->top = stack->top + 1;
    return true;
}

fun stack_pop(stack: *Stack) -> u8 {
    if stack->top == 0 {
        return 0;
    }
    stack->top = stack->top - 1;
    return stack->data[stack->top];
}

struct Queue {
    data: [256]u8,
    head: u8,
    tail: u8,
    count: u8
}

fun queue_init(queue: *Queue) -> void {
    queue->head = 0;
    queue->tail = 0;
    queue->count = 0;
}

fun queue_enqueue(queue: *Queue, value: u8) -> bool {
    if queue->count >= 255 {
        return false;
    }
    queue->data[queue->tail] = value;
    queue->tail = (queue->tail + 1) & 0xFF;
    queue->count = queue->count + 1;
    return true;
}

fun main() {
    let stack: Stack;
    let queue: Queue;
    
    stack_init(&stack);
    queue_init(&queue);
    
    stack_push(&stack, 42);
    queue_enqueue(&queue, 42);
}