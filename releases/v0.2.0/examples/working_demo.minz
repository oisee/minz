// MinZ v0.3.0 Working Demo
// Demonstrates current compiler capabilities

let mut counter: u8;
let mut buffer: [16]u8;

// Initialize demo data
fun init() -> void {
    counter = 0;
    
    // Initialize buffer with pattern
    let mut i: u8 = 0;
    while i < 16 {
        buffer[i] = i;
        i = i + 1;
    }
}

// Process buffer with simple operations
fun process() -> void {
    let mut i: u8 = 0;
    while i < 16 {
        // Increment each byte (demonstrating array access)
        let val: u8 = buffer[i];
        buffer[i] = val + 1;
        i = i + 1;
    }
    
    // Increment counter
    counter = counter + 1;
}

// Check if processing complete
fun is_done() -> bool {
    return counter >= 10;
}

// Main demo loop
fun main() -> void {
    init();
    
    // Process 10 times
    while !is_done() {
        process();
    }
    
    // Success marker - first buffer byte should be 10
    if buffer[0] == 10 {
        // Write to screen memory as success indicator
        asm {
            ld a, 0x55
            ld (0x4000), a
        }
    }
}