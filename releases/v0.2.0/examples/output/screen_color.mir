; MinZ Intermediate Representation (MIR)
; Module: main

Function set_border(color: u8) -> void
  @smc
  Instructions:
      0: return

Function fill_screen(ink: u8, paper: u8, bright: bool) -> void
  @smc
  Locals:
    r4 = attr: u8
    r11 = addr: u16
    r13 = end: u16
  Instructions:
      0: 10
      1: 10
      2: r7 = 3
      3: 34
      4: r9 = r5 | r8
      5: store , r9
      6: 10
      7: jump_if_not r10, else_1
      8: jump end_if_2
      9: else_1:
     10: end_if_2:
     11: r12 = 22528
     12: store , r12
     13: r14 = 22528
     14: r15 = 768
     15: r16 = r14 + r15
     16: store , r16
     17: loop_3:
     18: r17 = load addr
     19: r18 = load end
     20: r19 = r17 < r18
     21: jump_if_not r19, end_loop_4
     22: jump loop_3
     23: end_loop_4:
     24: return

Function main() -> void
  @smc
  Instructions:
      0: return

