// Test compile-time execution with factorial

// Pure recursive factorial - perfect for compile-time execution!
fun factorial(n: u8) -> u16 {
    if n <= 1 {
        return 1;
    }
    return n * factorial(n - 1);
}

// Pure Fibonacci  
fun fibonacci(n: u8) -> u16 {
    if n <= 1 {
        return n;
    }
    return fibonacci(n - 1) + fibonacci(n - 2);
}

fun main() -> void {
    // These should ALL be computed at compile-time!
    let fact5 = factorial(5);    // Should become: let fact5 = 120
    let fact6 = factorial(6);    // Should become: let fact6 = 720
    let fib7 = fibonacci(7);     // Should become: let fib7 = 13
    
    @print("Factorial and Fibonacci computed!");
    
    // These use the compile-time computed values
    if fact5 == 120 {
        @print("factorial(5) = 120 ✓");
    }
    
    if fact6 == 720 {
        @print("factorial(6) = 720 ✓");
    }
    
    if fib7 == 13 {
        @print("fibonacci(7) = 13 ✓");
    }
}