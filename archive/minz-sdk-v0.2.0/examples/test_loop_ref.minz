// Test loop iterator with REF TO mode (direct reference)

struct Counter {
    value: u8,
    max: u8
}

// Array of counters
let counters: [Counter; 10];

fn main() -> void {
    // Initialize counters
    let i: u8 = 0;
    while i < 10 {
        counters[i].value = 0;
        counters[i].max = i + 5;
        i = i + 1;
    }
    
    // Loop with REF TO mode - direct modification
    loop counters ref to counter {
        // Direct field modification using HL-relative addressing
        if counter.value < counter.max {
            counter.value = counter.value + 1;
        }
    }
    
    // Count how many reached their max
    let at_max: u8 = 0;
    loop counters ref to counter {
        if counter.value == counter.max {
            at_max = at_max + 1;
        }
    }
}