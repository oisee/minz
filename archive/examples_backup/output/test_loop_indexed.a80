; MinZ generated code
; Generated: 2025-07-28 08:45:59


; Data section
    ORG $F000

scores:
    DS 24

; Code section
    ORG $8000

; Using hierarchical register allocation (physical → shadow → memory)

; Function: ...examples.test_loop_indexed.main
...examples.test_loop_indexed.main:
; IsSMCDefault=true, IsSMCEnabled=true
; Using absolute addressing for locals (SMC style)
    ; r2 = 0
    LD A, 0
    ; Register 2 already in A
    ; store , r2
    LD ($F002), HL
    ; loop_1:
loop_1:
    ; r3 = load i
    LD HL, ($F002)
    ; r4 = 8
    LD A, 8
    LD D, A         ; Store to physical register D
    ; r5 = r3 < r4
    LD D, H
    LD E, L
    EX DE, HL
    OR A      ; Clear carry
    SBC HL, DE
    JP M, .L1
    LD HL, 0
    JP .L2
.L1:
    LD HL, 1
.L2:
    ; jump_if_not r5, end_loop_2
    LD A, E
    OR A
    JP Z, end_loop_2
    ; jump loop_1
    JP loop_1
    ; end_loop_2:
end_loop_2:
    ; r7 = 0
    LD A, 0
    LD H, A         ; Store to physical register H
    ; store , r7
    LD ($F00C), HL
    ; r9 = 0
    LD A, 0
    EXX               ; Switch to shadow registers
    LD B', A         ; Store to shadow B'
    EXX               ; Switch back to main registers
    ; store , r9
    LD ($F010), HL
    ; return
    RET

    END main
