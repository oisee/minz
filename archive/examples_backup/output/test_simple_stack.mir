; MinZ Intermediate Representation (MIR)
; Module: main

Function ...examples.test_simple_stack.test_stack() -> u8
  Locals:
    r1 = a: u8
    r3 = b: u8
    r5 = c: u8
    r7 = d: u8
    r9 = e: u8
    r11 = f: u8
    r13 = g: u8
    r15 = h: u8
  Instructions:
      0: r2 = 1
      1: store , r2
      2: r4 = 2
      3: store , r4
      4: r6 = 3
      5: store , r6
      6: r8 = 4
      7: store , r8
      8: r10 = 5
      9: store , r10
     10: r12 = 6
     11: store , r12
     12: r14 = 7
     13: store , r14
     14: r16 = 8
     15: store , r16
     16: r17 = load a
     17: r18 = load b
     18: r19 = r17 + r18
     19: r20 = load c
     20: r21 = r19 + r20
     21: r22 = load d
     22: r23 = r21 + r22
     23: r24 = load e
     24: r25 = r23 + r24
     25: r26 = load f
     26: r27 = r25 + r26
     27: r28 = load g
     28: r29 = r27 + r28
     29: r30 = load h
     30: r31 = r29 + r30
     31: return r31

Function ...examples.test_simple_stack.main() -> void
  @smc
  Locals:
    r1 = result: u8
  Instructions:
      0: r2 = call test_stack
      1: store , r2
      2: return

