; MinZ Intermediate Representation (MIR)
; Module: main

Function test_instruction_patching.add_numbers$u8$u8(a: u8, b: u8) -> u8
  @smc
  Instructions:
      0: LOAD_PARAM
      1: LOAD_PARAM
      2: r5 = r3 + r4
      3: return r5

Function test_instruction_patching.main() -> u8
  @smc
  Locals:
    r1 = temp: u8
    r9 = stored_result: u8
  Instructions:
      0: r2 = 10
      1: r3 = 20
      2: r4 = 10
      3: r5 = 20
      4: PATCH_TEMPLATE
      5: PATCH_TARGET
      6: PATCH_PARAM
      7: PATCH_PARAM
      8: r6 = call test_instruction_patching.add_numbers$u8$u8
      9: r7 = 5
     10: r8 = r6 + r7
     11: store temp, r8
     12: r10 = 30
     13: r11 = 40
     14: r12 = 30
     15: r13 = 40
     16: PATCH_TEMPLATE
     17: PATCH_TARGET
     18: PATCH_PARAM
     19: PATCH_PARAM
     20: r14 = call test_instruction_patching.add_numbers$u8$u8
     21: store stored_result, r14
     22: r15 = load temp
     23: r16 = load stored_result
     24: r17 = r15 + r16
     25: return r17

