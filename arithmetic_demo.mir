; MinZ Intermediate Representation (MIR)
; Module: main

Function examples.arithmetic_demo.test_arithmetic() -> void
  Locals:
    r1 = a: u8
    r3 = b: u8
    r5 = mul_result: u8
    r9 = c: u8
    r11 = d: u8
    r13 = div_result: u8
    r17 = e: u8
    r19 = f: u8
    r21 = mod_result: u8
    r25 = g: u8
    r27 = shl_result: u8
    r31 = h: u8
    r33 = shr_result: u8
  Instructions:
      0: r2 = 5
      1: store , r2
      2: r4 = 6
      3: store , r4
      4: r6 = load a
      5: r7 = load b
      6: r8 = r6 * r7
      7: store , r8
      8: r10 = 20
      9: store , r10
     10: r12 = 4
     11: store , r12
     12: r14 = load c
     13: r15 = load d
     14: 40
     15: store , r16
     16: r18 = 17
     17: store , r18
     18: r20 = 5
     19: store , r20
     20: r22 = load e
     21: r23 = load f
     22: 41
     23: store , r24
     24: r26 = 3
     25: store , r26
     26: r28 = load g
     27: r29 = 2
     28: 49
     29: store , r30
     30: r32 = 12
     31: store , r32
     32: r34 = load h
     33: r35 = 2
     34: 50
     35: store , r36
     36: return

Function examples.arithmetic_demo.main() -> void
  @smc
  Instructions:
      0: r1 = call test_arithmetic
      1: return

