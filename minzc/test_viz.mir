; MinZ Intermediate Representation (MIR)
; Module: main

Function ...test_iterator_visualization.main() -> void
  @smc
  Locals:
    r1 = numbers: [5]u8
  Instructions:
      0: UNKNOWN_OP_88
      1: UNKNOWN_OP_86 ; Print "=== Simple forEach ===" (22 chars via loop)
      2: r3 = load numbers
      3: r4 = 0 ; Iterator index = 0
      4: r7 = 5 ; Array length = 5
      5: iter_loop_1:
      6: r8 = r4 < r7 ; Check index < length
      7: jump_if_not r8, iter_end_2
      8: r5 = r3 + r4 ; Calculate element address
      9: UNKNOWN_OP_69 ; Load array element
     10: r9 = call print_u8 ; Call print_u8
     11: r10 = 1
     12: r4 = r4 + r10 ; Increment index
     13: jump iter_loop_1
     14: iter_end_2:
     15: UNKNOWN_OP_88
     16: UNKNOWN_OP_86 ; Print "
=== Chained map + forEach ===" (30 chars via loop)
     17: r12 = load numbers
     18: r13 = 0 ; Iterator index = 0
     19: r16 = 5 ; Array length = 5
     20: iter_loop_3:
     21: r17 = r13 < r16 ; Check index < length
     22: jump_if_not r17, iter_end_4
     23: r14 = r12 + r13 ; Calculate element address
     24: UNKNOWN_OP_69 ; Load array element
     25: r18 = call double ; Call double
     26: r19 = call print_u8 ; Call print_u8
     27: r20 = 1
     28: r13 = r13 + r20 ; Increment index
     29: jump iter_loop_3
     30: iter_end_4:
     31: UNKNOWN_OP_88
     32: UNKNOWN_OP_86 ; Print "
=== With explicit iter() ===" (29 chars via loop)
     33: r22 = load numbers
     34: r23 = 0 ; Iterator index = 0
     35: r26 = 5 ; Array length = 5
     36: iter_loop_5:
     37: r27 = r23 < r26 ; Check index < length
     38: jump_if_not r27, iter_end_6
     39: r24 = r22 + r23 ; Calculate element address
     40: UNKNOWN_OP_69 ; Load array element
     41: r28 = call print_u8 ; Call print_u8
     42: r29 = 1
     43: r23 = r23 + r29 ; Increment index
     44: jump iter_loop_5
     45: iter_end_6:
     46: return

Function ...test_iterator_visualization.double(x: u8) -> u8
  @smc
  Instructions:
      0: LOAD_PARAM
      1: r3 = 2
      2: r4 = r2 * r3
      3: return r4

Function ...test_iterator_visualization.print_u8(x: u8) -> void
  @smc
  Instructions:
      0: return

