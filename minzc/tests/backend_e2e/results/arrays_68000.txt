  ✅ Code generation successful

=== Generated Code Analysis ===
| MinZ 68000 generated code
| Generated: 2025-08-06 16:51:43
| Target: Motorola 68000/68010/68020/68030/68040/68060
| Assembler: vasm/gas compatible


	.text
	.global _start


| Function: tests.backend_e2e.sources.arrays.main
| SMC enabled - parameters can be patched
tests.backend_e2e.sources.arrays.main:
	link a6,#-16
	movem.l d2-d7/a2-a5,-(sp)
	move.l arr,d0
	moveq #0,d1
	| TODO: LOAD_INDEX
	move.l d2,first
	move.l arr,d4
	moveq #4,d5
	| TODO: LOAD_INDEX
	move.l d6,last
	move.l first,-40(a6)
	move.l last,-44(a6)
	move.l -40(a6),-48(a6)
	add.l -44(a6),-48(a6)
	move.l -48(a6),sum
	movem.l (sp)+,d2-d7/a2-a5
	unlk a6
	rts

| Print helpers
print_char:
	| Character in d0
	| Platform-specific implementation needed
	| Amiga: dos.library/Write
	| Atari ST: GEMDOS Cconout
	| Mac: _PBWrite trap
	rts

print_hex:
	move.b d0,d1
	lsr.b #4,d0
	bsr print_nibble
	move.b d1,d0
	bsr print_nibble
	rts

print_nibble:
  ⚠️  Assembler not available, skipping binary generation
