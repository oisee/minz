  ✅ Code generation successful

=== Generated Code Analysis ===
| MinZ 68000 generated code
| Generated: 2025-08-06 16:51:43
| Target: Motorola 68000/68010/68020/68030/68040/68060
| Assembler: vasm/gas compatible


	.text
	.global _start


| Function: tests.backend_e2e.sources.basic_math.main
| SMC enabled - parameters can be patched
tests.backend_e2e.sources.basic_math.main:
	link a6,#-20
	movem.l d2-d7/a2-a5,-(sp)
	moveq #42,d0
	move.l d0,x
	moveq #10,d2
	move.l d2,y
	move.l x,d4
	move.l y,d5
	move.l d4,d6
	add.l d5,d6
	move.l d6,sum
	move.l x,-40(a6)
	move.l y,-44(a6)
	move.l -40(a6),-48(a6)
	sub.l -44(a6),-48(a6)
	move.l -48(a6),diff
	move.l x,-56(a6)
	move.l #2,-60(a6)
	move.w -56(a6),d0
	muls.w -60(a6),d0
	move.l d0,-64(a6)
	move.l -64(a6),prod
	movem.l (sp)+,d2-d7/a2-a5
	unlk a6
	rts

| Print helpers
print_char:
	| Character in d0
	| Platform-specific implementation needed
	| Amiga: dos.library/Write
	| Atari ST: GEMDOS Cconout
	| Mac: _PBWrite trap
	rts

print_hex:
	move.b d0,d1
  ⚠️  Assembler not available, skipping binary generation
