; MinZ Intermediate Representation (MIR)
; Module: main

Function .Users.alice.dev.minz-ts.examples.stack_variables.test_stack_locals(x: u8, y: u8) -> u8
  @smc
  Locals:
    r3 = a: u8
    r7 = b: u8
    r11 = c: u8
  Instructions:
      0: UNKNOWN_OP_33 ; Load from anchor x$imm0
      1: UNKNOWN_OP_33 ; Load from anchor y$imm0
      2: r15 = load c
      3: return r15

Function .Users.alice.dev.minz-ts.examples.stack_variables.factorial(n: u8) -> u16
  @smc
  @recursive
  Locals:
    r6 = prev: u16
  Instructions:
      0: UNKNOWN_OP_33 ; Load from anchor n$imm0
      1: r3 = 1
      2: r4 = r2 <= r3
      3: jump_if_not r4, else_1
      4: r5 = 1
      5: return r5
      6: else_1:
      7: UNKNOWN_OP_33 ; Load from anchor n$imm0
      8: r10 = call factorial
      9: UNKNOWN_OP_33 ; Load from anchor n$imm0
     10: r12 = load prev
     11: r13 = r11 * r12
     12: return r13

Function .Users.alice.dev.minz-ts.examples.stack_variables.many_locals() -> u8
  @smc
  Locals:
    r1 = a: u8
    r3 = b: u8
    r5 = c: u8
    r7 = d: u8
    r9 = e: u8
    r11 = f: u8
    r13 = g: u8
    r15 = h: u8
    r17 = sum1: u8
    r25 = sum2: u8
  Instructions:
      0: r33 = load sum1
      1: r34 = load sum2
      2: r35 = r33 + r34
      3: return r35

Function .Users.alice.dev.minz-ts.examples.stack_variables.outer(x: u8) -> u8
  @smc
  Locals:
    r2 = local1: u8
    r6 = result: u8
    r9 = local2: u8
  Instructions:
      0: UNKNOWN_OP_33 ; Load from anchor x$imm0
      1: r8 = call inner
      2: r13 = load local2
      3: return r13

Function .Users.alice.dev.minz-ts.examples.stack_variables.inner(y: u8) -> u8
  @smc
  Locals:
    r2 = temp: u8
  Instructions:
      0: UNKNOWN_OP_33 ; Load from anchor y$imm0
      1: r6 = load temp
      2: return r6

Function .Users.alice.dev.minz-ts.examples.stack_variables.main() -> void
  @smc
  @recursive
  Locals:
    r1 = r1: u16
    r5 = r2: u16
    r8 = r3: u16
    r10 = r4: u16
  Instructions:
      0: r4 = call test_stack_locals
      1: r7 = call factorial
      2: r9 = call many_locals
      3: r12 = call outer
      4: return

