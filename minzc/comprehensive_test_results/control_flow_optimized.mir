; MinZ Intermediate Representation (MIR)
; Module: main

Function .Users.alice.dev.minz-ts.examples.control_flow.test_if(x: u8) -> u8
  @smc
  Instructions:
      0: UNKNOWN_OP_33 ; Load from anchor x$imm0
      1: r3 = 10
      2: r4 = r2 > r3
      3: jump_if_not r4, else_1
      4: UNKNOWN_OP_33 ; Load from anchor x$imm0
      5: SHL
      6: return r7
      7: else_1:
      8: UNKNOWN_OP_33 ; Load from anchor x$imm0
      9: r9 = 5
     10: r10 = r8 > r9
     11: jump_if_not r10, else_3
     12: UNKNOWN_OP_33 ; Load from anchor x$imm0
     13: r12 = 10
     14: r13 = r11 + r12
     15: return r13
     16: else_3:
     17: UNKNOWN_OP_33 ; Load from anchor x$imm0
     18: return r14

Function .Users.alice.dev.minz-ts.examples.control_flow.test_while(n: u8) -> u8
  @smc
  Locals:
    r2 = sum: u8
    r4 = i: u8
  Instructions:
      0: loop_5:
      1: r6 = load i
      2: UNKNOWN_OP_33 ; Load from anchor n$imm0
      3: r8 = r6 < r7
      4: jump_if_not r8, end_loop_6
      5: jump loop_5
      6: end_loop_6:
      7: r15 = load sum
      8: return r15

