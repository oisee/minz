; MinZ Intermediate Representation (MIR)
; Module: main

Function .Users.alice.dev.minz-ts.examples.test_register_params.add_bytes(a: u8, b: u8) -> u8
  @smc
  Instructions:
      0: UNKNOWN_OP_33 ; Load from anchor a$imm0
      1: UNKNOWN_OP_33 ; Load from anchor b$imm0
      2: r5 = r3 + r4
      3: return r5

Function .Users.alice.dev.minz-ts.examples.test_register_params.add_words(x: u16, y: u16) -> u16
  @smc
  Instructions:
      0: UNKNOWN_OP_33 ; Load from anchor x$imm0
      1: UNKNOWN_OP_33 ; Load from anchor y$imm0
      2: r5 = r3 + r4
      3: return r5

Function .Users.alice.dev.minz-ts.examples.test_register_params.process(value: u8, ptr: *u8, count: u16) -> u8
  @smc
  Locals:
    r4 = sum: u8
  Instructions:
      0: UNKNOWN_OP_33 ; Load from anchor value$imm0
      1: UNKNOWN_OP_33 ; Load from anchor count$imm0
      2: r8 = r6 ; Initialize loop variable i
      3: for_loop_1:
      4: r9 = r8 < r7 ; Check i < end
      5: jump_if_not r9, for_end_2
      6: UNKNOWN_OP_33 ; Load from anchor ptr$imm0
      7: UNKNOWN_OP_69
      8: r16 = r14 + r15
      9: r8 = r8 + r17 ; Increment i
     10: UNKNOWN_OP_33 ; Load from anchor ptr$imm0
     11: r15 = 1
     12: r17 = 1
     13: store ptr, r16
     14: jump for_loop_1
     15: for_end_2:
     16: r18 = load sum
     17: return r18

Function .Users.alice.dev.minz-ts.examples.test_register_params.many_params(a: u8, b: u8, c: u8, d: u8, e: u8) -> u8
  @smc
  Instructions:
      0: UNKNOWN_OP_33 ; Load from anchor a$imm0
      1: UNKNOWN_OP_33 ; Load from anchor b$imm0
      2: r8 = r6 + r7
      3: UNKNOWN_OP_33 ; Load from anchor c$imm0
      4: r10 = r8 + r9
      5: UNKNOWN_OP_33 ; Load from anchor d$imm0
      6: r12 = r10 + r11
      7: UNKNOWN_OP_33 ; Load from anchor e$imm0
      8: r14 = r12 + r13
      9: return r14

Function .Users.alice.dev.minz-ts.examples.test_register_params.recursive_sum(n: u8) -> u16
  @smc
  @recursive
  Instructions:
      0: UNKNOWN_OP_33 ; Load from anchor n$imm0
      1: UNKNOWN_OP_57
      2: jump_if_not r4, else_3
      3: r5 = 0
      4: return r5
      5: else_3:
      6: UNKNOWN_OP_33 ; Load from anchor n$imm0
      7: UNKNOWN_OP_33 ; Load from anchor n$imm0
      8: r10 = call recursive_sum
      9: r11 = r6 + r10
     10: return r11

Function .Users.alice.dev.minz-ts.examples.test_register_params.main() -> void
  @smc
  @recursive
  Locals:
    r1 = r1: u16
    r5 = r2: u16
    r9 = data: [5]u8
    r10 = r3: u16
    r18 = r4: u16
    r25 = r5: u16
  Instructions:
      0: r4 = call add_bytes
      1: r8 = call add_words
      2: LOAD_INDEX ; Load array element (u8)
      3: UNKNOWN_OP_68
      4: r17 = call process
      5: r24 = call many_params
      6: r27 = call recursive_sum
      7: return

