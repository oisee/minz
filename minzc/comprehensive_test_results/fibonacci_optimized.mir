; MinZ Intermediate Representation (MIR)
; Module: main

Function .Users.alice.dev.minz-ts.examples.fibonacci.fibonacci(n: u8) -> u16
  @smc
  Locals:
    r6 = a: u16
    r8 = b: u16
    r10 = i: u8
    r15 = temp: u16
  Instructions:
      0: UNKNOWN_OP_31 ; Load from anchor n$imm0
      1: r3 = 1
      2: r4 = r2 <= r3
      3: jump_if_not r4, else_1
      4: UNKNOWN_OP_31 ; Load from anchor n$imm0
      5: return r5
      6: else_1:
      7: r7 = 0
      8: store , r7
      9: r9 = 1
     10: store , r9
     11: r11 = 2
     12: store , r11
     13: loop_3:
     14: r12 = load i
     15: UNKNOWN_OP_31 ; Load from anchor n$imm0
     16: r14 = r12 <= r13
     17: jump_if_not r14, end_loop_4
     18: r16 = load a
     19: r17 = load b
     20: r18 = r16 + r17
     21: store , r18
     22: r19 = load b
     23: store a, r19
     24: r20 = load temp
     25: store b, r20
     26: r21 = load i
     27: r22 = 1
     28: r23 = r21 + r22
     29: store i, r23
     30: jump loop_3
     31: end_loop_4:
     32: r24 = load b
     33: return r24

Function .Users.alice.dev.minz-ts.examples.fibonacci.main() -> void
  @smc
  Locals:
    r1 = result: u16
  Instructions:
      0: r3 = call fibonacci
      1: store , r3
      2: return

