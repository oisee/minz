; MinZ Intermediate Representation (MIR)
; Module: main

Function .Users.alice.dev.minz-ts.examples.main.main() -> void
  @smc
  Locals:
    r4 = x: u8
    r6 = y: u8
    r8 = counter: u16
  Instructions:
      0: r1 = call clear_screen
      1: r2 = 1
      2: r3 = call set_border
      3: r5 = 10
      4: store , r5
      5: r7 = 10
      6: store , r7
      7: r9 = 0
      8: store , r9
      9: loop_1:
     10: r10 = load counter
     11: r11 = 1000
     12: r12 = r10 < r11
     13: jump_if_not r12, end_loop_2
     14: r13 = load x
     15: r14 = 1
     16: r15 = r13 + r14
     17: store x, r15
     18: r16 = load x
     19: r17 = 20
     20: r18 = r16 > r17
     21: jump_if_not r18, else_3
     22: r19 = 10
     23: store x, r19
     24: r20 = load y
     25: r21 = 1
     26: r22 = r20 + r21
     27: store y, r22
     28: r23 = load y
     29: r24 = 20
     30: r25 = r23 > r24
     31: jump_if_not r25, else_5
     32: r26 = 10
     33: store y, r26
     34: jump end_if_6
     35: else_5:
     36: end_if_6:
     37: jump end_if_4
     38: else_3:
     39: end_if_4:
     40: r27 = load x
     41: r28 = load y
     42: r29 = call draw_pixel
     43: r30 = 10
     44: r31 = call delay
     45: r32 = load counter
     46: r33 = 1
     47: r34 = r32 + r33
     48: store counter, r34
     49: jump loop_1
     50: end_loop_2:
     51: return

Function .Users.alice.dev.minz-ts.examples.main.clear_screen() -> void
  @smc
  Locals:
    r1 = addr: u16
  Instructions:
      0: r2 = 16384
      1: store , r2
      2: loop_7:
      3: r3 = load addr
      4: r4 = 16384
      5: r5 = 6144
      6: r6 = r4 + r5
      7: r7 = r3 < r6
      8: jump_if_not r7, end_loop_8
      9: r8 = load addr
     10: r9 = 1
     11: r10 = r8 + r9
     12: store addr, r10
     13: jump loop_7
     14: end_loop_8:
     15: return

Function .Users.alice.dev.minz-ts.examples.main.set_border(color: u8) -> void
  @smc
  Instructions:
      0: return

Function .Users.alice.dev.minz-ts.examples.main.draw_pixel(x: u8, y: u8) -> void
  @smc
  Locals:
    r3 = addr: u16
  Instructions:
      0: r4 = 16384
      1: LOAD_PARAM
      2: r6 = 32
      3: r7 = r5 * r6
      4: r8 = r4 + r7
      5: LOAD_PARAM
      6: r10 = r8 + r9
      7: store , r10
      8: return

Function .Users.alice.dev.minz-ts.examples.main.delay(count: u16) -> void
  @smc
  Locals:
    r2 = i: u16
  Instructions:
      0: r3 = 0
      1: store , r3
      2: loop_9:
      3: r4 = load i
      4: LOAD_PARAM
      5: r6 = r4 < r5
      6: jump_if_not r6, end_loop_10
      7: r7 = load i
      8: r8 = 1
      9: r9 = r7 + r8
     10: store i, r9
     11: jump loop_9
     12: end_loop_10:
     13: return

