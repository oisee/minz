; MinZ Intermediate Representation (MIR)
; Module: main

Function .Users.alice.dev.minz-ts.examples.traffic_light_fsm.transition(current: TrafficState, event: Event) -> TrafficState
  @smc
  Instructions:
      0: UNKNOWN_OP_33 ; Load from anchor current$imm0
      1: JUMP_IF
      2: return

Function .Users.alice.dev.minz-ts.examples.traffic_light_fsm.get_timing(state: TrafficState) -> u16
  @smc
  Instructions:
      0: UNKNOWN_OP_33 ; Load from anchor state$imm0
      1: JUMP_IF
      2: return

Function .Users.alice.dev.minz-ts.examples.traffic_light_fsm.get_color_code(state: TrafficState) -> u16
  @smc
  Instructions:
      0: UNKNOWN_OP_33 ; Load from anchor state$imm0
      1: JUMP_IF
      2: return

Function .Users.alice.dev.minz-ts.examples.traffic_light_fsm.simulate_traffic_light() -> void
  @smc
  Locals:
    r1 = state: u16
    r3 = cycle_count: u8
  Instructions:
      0: UNKNOWN_OP_87
      1: UNKNOWN_OP_86
      2: loop_16:
      3: r6 = load cycle_count
      4: r7 = 10
      5: r8 = r6 < r7
      6: jump_if_not r8, end_loop_17
      7: UNKNOWN_OP_87
      8: UNKNOWN_OP_86
      9: UNKNOWN_OP_81
     10: UNKNOWN_OP_87
     11: UNKNOWN_OP_86
     12: r13 = call get_color_code
     13: UNKNOWN_OP_81
     14: UNKNOWN_OP_87
     15: UNKNOWN_OP_86
     16: r16 = call get_timing
     17: UNKNOWN_OP_81
     18: UNKNOWN_OP_87
     19: UNKNOWN_OP_86
     20: r20 = call transition
     21: jump loop_16
     22: end_loop_17:
     23: UNKNOWN_OP_87
     24: UNKNOWN_OP_86
     25: r27 = call transition
     26: UNKNOWN_OP_87
     27: UNKNOWN_OP_86
     28: r30 = call get_color_code
     29: UNKNOWN_OP_81
     30: UNKNOWN_OP_87
     31: UNKNOWN_OP_86
     32: UNKNOWN_OP_87
     33: UNKNOWN_OP_86
     34: r35 = call transition
     35: UNKNOWN_OP_87
     36: UNKNOWN_OP_86
     37: r38 = call get_color_code
     38: UNKNOWN_OP_81
     39: UNKNOWN_OP_87
     40: UNKNOWN_OP_86
     41: return

Function .Users.alice.dev.minz-ts.examples.traffic_light_fsm.main() -> void
  @smc
  Instructions:
      0: r1 = call simulate_traffic_light
      1: return

