; MinZ generated code
; Generated: 2025-07-26 19:13:59


; Code section
    ORG $8000


; Function: ...mnist_test3.main
...mnist_test3.main:
; IsSMCDefault=true, IsSMCEnabled=true
; Using absolute addressing for locals (SMC style)
    ; r2 = 5
    LD A, 5
    LD ($F004), A
    ; r3 = load editor
    LD HL, ($F000)
    LD ($F006), HL
    ; Store to field x (offset 0)
    LD HL, ($F006)
    PUSH HL
    LD HL, ($F004)
    POP DE
    LD (DE), L
    INC DE
    LD (DE), H
    ; r4 = 1
    LD A, 1
    LD ($F008), A
    ; r5 = load editor
    LD HL, ($F000)
    LD ($F00A), HL
    ; Load field data (offset 1)
    LD HL, ($F00A)
    LD DE, 1
    ADD HL, DE
    LD E, (HL)
    INC HL
    LD D, (HL)
    EX DE, HL
    LD ($F00C), HL
    ; r7 = 0
    LD A, 0
    LD ($F00E), A
    ; Calculate array element address
    LD HL, ($F00C)
    LD D, H
    LD E, L
    LD HL, ($F00E)
    ADD HL, DE
    LD ($F010), HL
    ; Store to array[index] (u8)
    LD HL, ($F010)
    PUSH HL
    LD A, ($F008)
    POP HL
    LD (HL), A
    ; r9 = 2
    LD A, 2
    LD ($F012), A
    ; r10 = load editor
    LD HL, ($F000)
    LD ($F014), HL
    ; Load field data (offset 1)
    LD HL, ($F014)
    LD DE, 1
    ADD HL, DE
    LD E, (HL)
    INC HL
    LD D, (HL)
    EX DE, HL
    LD ($F016), HL
    ; r12 = 1
    LD A, 1
    LD ($F018), A
    ; Calculate array element address
    LD HL, ($F016)
    LD D, H
    LD E, L
    LD HL, ($F018)
    ADD HL, DE
    LD ($F01A), HL
    ; Store to array[index] (u8)
    LD HL, ($F01A)
    PUSH HL
    LD A, ($F012)
    POP HL
    LD (HL), A
    ; r15 = load editor
    LD HL, ($F000)
    LD ($F01E), HL
    ; Load field data (offset 1)
    LD HL, ($F01E)
    LD DE, 1
    ADD HL, DE
    LD E, (HL)
    INC HL
    LD D, (HL)
    EX DE, HL
    LD ($F020), HL
    ; r17 = 0
    LD A, 0
    LD ($F022), A
    ; Load array element (u8)
    LD HL, ($F020)
    PUSH HL
    LD A, ($F022)
    LD E, A
    LD D, 0
    POP HL
    ADD HL, DE
    LD A, (HL)
    LD ($F024), A
    ; store , r18
    LD HL, ($F024)
    LD ($F01C), HL
    ; return
    RET

    END main
