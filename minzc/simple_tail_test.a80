; MinZ generated code
; Generated: 2025-07-27 08:53:43


; Code section
    ORG $8000

; Using hierarchical register allocation (physical → shadow → memory)

; Function: simple_tail_test.countdown
simple_tail_test.countdown:
; TRUE SMC function with immediate anchors
n$immOP:
    LD A, 0        ; n anchor (will be patched)
n$imm0 EQU n$immOP+1
    ; Register 2 already in A
    ; Tail recursion loop start
simple_tail_test.countdown_tail_loop:
    ; XOR A,A (optimized from LD A,0)
    XOR A
    LD B, A         ; Store to physical register B
    ; r4 = r2 == r3
    LD D, H
    LD E, L
    EX DE, HL
    OR A      ; Clear carry
    SBC HL, DE
    JP Z, .L1
    LD HL, 0
    JP .L2
.L1:
    LD HL, 1
.L2:
    ; jump_if_not r4, else_1
    LD A, C
    OR A
    JP Z, else_1
    ; XOR A,A (optimized from LD A,0)
    XOR A
    LD D, A         ; Store to physical register D
    ; return r5
    RET
    ; else_1:
else_1:
    LD A, (n$imm0)    ; Reuse from anchor
    LD E, A         ; Store to physical register E
    ; Tail recursion optimized to loop
    JP simple_tail_test.countdown_tail_loop
    RET
; Using hierarchical register allocation (physical → shadow → memory)

; Function: simple_tail_test.main
simple_tail_test.main:
; IsSMCDefault=true, IsSMCEnabled=true
; Using absolute addressing for locals (SMC style)
; Recursive context handled via stack push/pop of SMC parameters
    ; r3 = call countdown
    ; Call to countdown (args: 1)
    ; Stack-based parameter passing
    LD HL, ($F004)    ; Virtual register 2 from memory
    PUSH HL       ; Argument 0
    ; Found function, UsesTrueSMC=true
    ; TRUE SMC call to simple_tail_test.countdown
    LD A, ($F004)     ; Virtual register 2 from memory
    LD (n$imm0), A        ; Patch n
    CALL simple_tail_test.countdown
    ; store , r3
    LD ($F002), HL
    ; return
    RET

; TRUE SMC PATCH-TABLE
; Format: DW anchor_addr, DB size, DB param_tag
PATCH_TABLE:
    DW n$imm0           ; simple_tail_test.countdown.n
    DB 1              ; Size in bytes
    DB 0              ; Reserved for param tag
    DW 0              ; End of table
PATCH_TABLE_END:

    END main
