; MinZ Intermediate Representation (MIR)
; Module: main

Function ...examples.test_complex_assign_simple.test_arrays() -> u8
  @smc
  Locals:
    r1 = arr: [5]u8
    r14 = i: u8
  Instructions:
      0: r2 = 10
      1: r3 = load arr
      2: r4 = 0
      3: r5 = r3 + r4 ; Calculate array element address
      4: UNKNOWN_OP_64 ; Store to array[index] (u8)
      5: r6 = 20
      6: r7 = load arr
      7: r8 = 1
      8: r9 = r7 + r8 ; Calculate array element address
      9: UNKNOWN_OP_64 ; Store to array[index] (u8)
     10: r10 = 30
     11: r11 = load arr
     12: r12 = 2
     13: r13 = r11 + r12 ; Calculate array element address
     14: UNKNOWN_OP_64 ; Store to array[index] (u8)
     15: r15 = 3
     16: store , r15
     17: r16 = 40
     18: r17 = load arr
     19: r18 = load i
     20: r19 = r17 + r18 ; Calculate array element address
     21: UNKNOWN_OP_64 ; Store to array[index] (u8)
     22: r20 = load arr
     23: r21 = 0
     24: LOAD_INDEX ; Load array element (u8)
     25: r23 = load arr
     26: r24 = 1
     27: LOAD_INDEX ; Load array element (u8)
     28: r26 = r22 + r25
     29: r27 = load arr
     30: r28 = 2
     31: LOAD_INDEX ; Load array element (u8)
     32: r30 = r26 + r29
     33: r31 = load arr
     34: r32 = 3
     35: LOAD_INDEX ; Load array element (u8)
     36: r34 = r30 + r33
     37: return r34

Function ...examples.test_complex_assign_simple.test_structs() -> u8
  @smc
  Locals:
    r1 = v: ...examples.test_complex_assign_simple.Vec2
  Instructions:
      0: r2 = 100
      1: r3 = load v
      2: STORE_FIELD ; Store to field x (offset 0)
      3: r4 = 50
      4: r5 = load v
      5: STORE_FIELD ; Store to field y (offset 1)
      6: r6 = load v
      7: LOAD_FIELD ; Load field x (offset 0)
      8: r8 = load v
      9: LOAD_FIELD ; Load field y (offset 1)
     10: r10 = r7 + r9
     11: return r10

Function ...examples.test_complex_assign_simple.main() -> u8
  @smc
  Locals:
    r1 = a: u8
    r3 = s: u8
  Instructions:
      0: r2 = call test_arrays
      1: store , r2
      2: r4 = call test_structs
      3: store , r4
      4: r5 = load a
      5: return r5

