// Bit Manipulation Example
fun set_bit(value: u8, bit: u8) -> u8 {
    return value | (1 << bit);
}

fun clear_bit(value: u8, bit: u8) -> u8 {
    return value & ~(1 << bit);
}

fun toggle_bit(value: u8, bit: u8) -> u8 {
    return value ^ (1 << bit);
}

fun test_bit(value: u8, bit: u8) -> bool {
    return (value & (1 << bit)) != 0;
}

fun count_bits(value: u8) -> u8 {
    let count: u8 = 0;
    while value != 0 {
        count = count + (value & 1);
        value = value >> 1;
    }
    return count;
}

fun main() {
    let flags: u8 = 0b10101010;
    flags = set_bit(flags, 0);
    flags = clear_bit(flags, 7);
    flags = toggle_bit(flags, 4);
    let bit_set = test_bit(flags, 5);
    let ones = count_bits(flags);
}