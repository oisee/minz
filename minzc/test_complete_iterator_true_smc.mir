; MinZ Intermediate Representation (MIR)
; Module: main

Function ...examples.test_complete_iterator.main() -> void
  @smc
  Locals:
    r8 = sum: u16
    r15 = val: u8
  Instructions:
      0: 55 ; Load table base address
      1: 55 ; Load table base for end calculation
      2: 60 ; Calculate table end (+ 4 elements * 2 bytes)
      3: 59 ; Load loop counter
      4: 41 ; Check if reached end of table
      5: 3 ; Exit if done
      6: 56 ; Copy element to buffer at $F000
      7: 18 ; Store to p.x at buffer $F000
      8: 18 ; Store to p.y at buffer $F001
      9: 57 ; Copy buffer back to element at $F000
     10: 60 ; Advance to next element (+2 bytes)
     11: 58 ; Decrement counter and loop if not zero
     12: r9 = r9 ^ r9 ; XOR A,A (optimized from LD A,0)
     13: store , r9
     14: 55 ; Load table base address
     15: 55 ; Load table base for end calculation
     16: 60 ; Calculate table end (+ 4 elements * 2 bytes)
     17: 59 ; Load loop counter
     18: 41 ; Check if reached end of table
     19: 3 ; Exit if done
     20: r16 = load p
     21: 11 ; Load field x (offset 0)
     22: store , r17
     23: r18 = load sum
     24: r19 = load val
     25: r20 = r18 + r19
     26: store sum, r20
     27: 60 ; Advance to next element (+2 bytes)
     28: 58 ; Decrement counter and loop if not zero
     29: 55 ; Load table base address
     30: 55 ; Load table base for end calculation
     31: 60 ; Calculate table end (+ 4 elements * 2 bytes)
     32: 59 ; Load loop counter
     33: 59
     34: 41 ; Check if reached end of table
     35: 3 ; Exit if done
     36: 56 ; Copy element to buffer at $F000
     37: r27 = load idx
     38: r28 = r28 ^ r28 ; XOR A,A (optimized from LD A,0)
     39: r29 = r27 == r28
     40: jump_if_not r29, else_7
     41: 18 ; Store to point.x at buffer $F000
     42: jump end_if_8
     43: else_7:
     44: end_if_8:
     45: 57 ; Copy buffer back to element at $F000
     46: 33
     47: 60 ; Advance to next element (+2 bytes)
     48: 58 ; Decrement counter and loop if not zero
     49: return

