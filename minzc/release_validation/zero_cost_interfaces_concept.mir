; MinZ Intermediate Representation (MIR)
; Module: main

Function ......examples.zero_cost_interfaces_concept.sprite_draw(s: *......examples.zero_cost_interfaces_concept.Sprite) -> void
  @smc
  Instructions:
      0: UNKNOWN_OP_33 ; Load from anchor s$imm0
      1: UNKNOWN_OP_81
      2: return

Function ......examples.zero_cost_interfaces_concept.text_draw(t: *......examples.zero_cost_interfaces_concept.Text) -> void
  @smc
  Instructions:
      0: UNKNOWN_OP_33 ; Load from anchor t$imm0
      1: UNKNOWN_OP_81
      2: return

Function ......examples.zero_cost_interfaces_concept.circle_draw(c: *......examples.zero_cost_interfaces_concept.Circle) -> void
  @smc
  Instructions:
      0: UNKNOWN_OP_33 ; Load from anchor c$imm0
      1: UNKNOWN_OP_81
      2: return

Function ......examples.zero_cost_interfaces_concept.render_sprite(s: *......examples.zero_cost_interfaces_concept.Sprite) -> void
  @smc
  Instructions:
      0: UNKNOWN_OP_88
      1: UNKNOWN_OP_86 ; Print "Rendering: " (11 chars via loop)
      2: UNKNOWN_OP_33 ; Load from anchor s$imm0
      3: r4 = call sprite_draw
      4: return

Function ......examples.zero_cost_interfaces_concept.render_text(t: *......examples.zero_cost_interfaces_concept.Text) -> void
  @smc
  Instructions:
      0: UNKNOWN_OP_88
      1: UNKNOWN_OP_86 ; Print "Rendering: " (11 chars via loop)
      2: UNKNOWN_OP_33 ; Load from anchor t$imm0
      3: r4 = call text_draw
      4: return

Function ......examples.zero_cost_interfaces_concept.render_circle(c: *......examples.zero_cost_interfaces_concept.Circle) -> void
  @smc
  Instructions:
      0: UNKNOWN_OP_88
      1: UNKNOWN_OP_86 ; Print "Rendering: " (11 chars via loop)
      2: UNKNOWN_OP_33 ; Load from anchor c$imm0
      3: r4 = call circle_draw
      4: return

Function ......examples.zero_cost_interfaces_concept.vtable_dispatch(vtable: *......examples.zero_cost_interfaces_concept.VTableDrawable) -> void
  @smc
  Instructions:
      0: UNKNOWN_OP_88
      1: UNKNOWN_OP_86 ; Print "Traditional vtable dispatch:
" (29 chars via loop)
      2: UNKNOWN_OP_88
      3: UNKNOWN_OP_86 ; Print "  LD HL, (vtable)     ; 16 T-states
" (36 chars via loop)
      4: UNKNOWN_OP_88
      5: UNKNOWN_OP_86 ; Print "  LD E, (HL)          ; 7 T-states
" (35 chars via loop)
      6: UNKNOWN_OP_88
      7: UNKNOWN_OP_86 ; Print "  INC HL              ; 6 T-states
" (35 chars via loop)
      8: UNKNOWN_OP_88
      9: UNKNOWN_OP_86 ; Print "  LD D, (HL)          ; 7 T-states
" (35 chars via loop)
     10: UNKNOWN_OP_88
     11: UNKNOWN_OP_86 ; Print "  CALL (DE)           ; 17 T-states
" (36 chars via loop)
     12: UNKNOWN_OP_88
     13: UNKNOWN_OP_86 ; Print "  Total: 53 T-states!
" (22 chars via loop)
     14: return

Function ......examples.zero_cost_interfaces_concept.zero_cost_dispatch() -> void
  @smc
  Instructions:
      0: UNKNOWN_OP_88
      1: UNKNOWN_OP_86 ; Print "
MinZ zero-cost dispatch:
" (26 chars via loop)
      2: UNKNOWN_OP_88
      3: UNKNOWN_OP_86 ; Print "  CALL sprite_draw    ; 17 T-states
" (36 chars via loop)
      4: UNKNOWN_OP_88
      5: UNKNOWN_OP_86 ; Print "  Total: 17 T-states!
" (22 chars via loop)
      6: UNKNOWN_OP_88
      7: UNKNOWN_OP_86 ; Print "  Savings: 36 T-states (68% faster!)
" (37 chars via loop)
      8: return

Function ......examples.zero_cost_interfaces_concept.game_object_update(obj: *......examples.zero_cost_interfaces_concept.GameObject) -> void
  @smc
  Instructions:
      0: UNKNOWN_OP_33 ; Load from anchor obj$imm0
      1: UNKNOWN_OP_68
      2: r5 = call sprite_draw
      3: UNKNOWN_OP_88
      4: UNKNOWN_OP_86 ; Print "  (Would check collision here)
" (31 chars via loop)
      5: return

Function ......examples.zero_cost_interfaces_concept.demonstrate_monomorphization() -> void
  @smc
  Instructions:
      0: UNKNOWN_OP_88
      1: UNKNOWN_OP_86 ; Print "
=== Monomorphization ===
" (26 chars via loop)
      2: UNKNOWN_OP_88
      3: UNKNOWN_OP_86 ; Print "Generic function calls create specialized versions:

" (53 chars via loop)
      4: UNKNOWN_OP_88
      5: UNKNOWN_OP_86 ; Print "render<Sprite>(s) generates:
" (29 chars via loop)
      6: UNKNOWN_OP_88
      7: UNKNOWN_OP_86 ; Print "  render_sprite: CALL sprite_draw

" (35 chars via loop)
      8: UNKNOWN_OP_88
      9: UNKNOWN_OP_86 ; Print "render<Text>(t) generates:
" (27 chars via loop)
     10: UNKNOWN_OP_88
     11: UNKNOWN_OP_86 ; Print "  render_text: CALL text_draw

" (31 chars via loop)
     12: UNKNOWN_OP_88
     13: UNKNOWN_OP_86 ; Print "render<Circle>(c) generates:
" (29 chars via loop)
     14: UNKNOWN_OP_88
     15: UNKNOWN_OP_86 ; Print "  render_circle: CALL circle_draw

" (35 chars via loop)
     16: UNKNOWN_OP_88
     17: UNKNOWN_OP_86 ; Print "No runtime type checking needed!
" (33 chars via loop)
     18: return

Function ......examples.zero_cost_interfaces_concept.main() -> void
  @smc
  Locals:
    r4 = s: ......examples.zero_cost_interfaces_concept.Sprite
    r13 = t: ......examples.zero_cost_interfaces_concept.Text
    r20 = c: ......examples.zero_cost_interfaces_concept.Circle
    r38 = vtable: ......examples.zero_cost_interfaces_concept.VTableDrawable
  Instructions:
      0: UNKNOWN_OP_88
      1: UNKNOWN_OP_86 ; Print "=====================================
" (38 chars via loop)
      2: UNKNOWN_OP_88
      3: UNKNOWN_OP_86 ; Print "Zero-Cost Interfaces Concept Demo
" (34 chars via loop)
      4: UNKNOWN_OP_88
      5: UNKNOWN_OP_86 ; Print "=====================================

" (39 chars via loop)
      6: UNKNOWN_OP_88
      7: UNKNOWN_OP_86 ; Print "=== Direct Specialized Calls ===
" (33 chars via loop)
      8: UNKNOWN_OP_68
      9: r30 = call render_sprite
     10: UNKNOWN_OP_68
     11: r33 = call render_text
     12: UNKNOWN_OP_68
     13: r36 = call render_circle
     14: UNKNOWN_OP_88
     15: UNKNOWN_OP_86 ; Print "
=== Performance Analysis ===
" (30 chars via loop)
     16: UNKNOWN_OP_68
     17: r45 = call vtable_dispatch
     18: r46 = call zero_cost_dispatch
     19: r47 = call demonstrate_monomorphization
     20: UNKNOWN_OP_88
     21: UNKNOWN_OP_86 ; Print "
=== Benefits ===
" (18 chars via loop)
     22: UNKNOWN_OP_88
     23: UNKNOWN_OP_86 ; Print "â No vtables in memory
" (28 chars via loop)
     24: UNKNOWN_OP_88
     25: UNKNOWN_OP_86 ; Print "â No indirect calls
" (25 chars via loop)
     26: UNKNOWN_OP_88
     27: UNKNOWN_OP_86 ; Print "â Compile-time type checking
" (34 chars via loop)
     28: UNKNOWN_OP_88
     29: UNKNOWN_OP_86 ; Print "â Can inline interface methods
" (36 chars via loop)
     30: UNKNOWN_OP_88
     31: UNKNOWN_OP_86 ; Print "â 68% faster than vtable dispatch
" (39 chars via loop)
     32: UNKNOWN_OP_88
     33: UNKNOWN_OP_86 ; Print "
=====================================
" (39 chars via loop)
     34: UNKNOWN_OP_88
     35: UNKNOWN_OP_86 ; Print "Future MinZ: Interfaces with ZERO cost!
" (40 chars via loop)
     36: UNKNOWN_OP_88
     37: UNKNOWN_OP_86 ; Print "=====================================
" (38 chars via loop)
     38: return

