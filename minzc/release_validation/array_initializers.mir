; MinZ Intermediate Representation (MIR)
; Module: main

Function ......examples.array_initializers.main() -> void
  @smc
  Locals:
    r1 = colors: [3]u8
    r2 = matrix: [2][2]u8
    r3 = empty: [0]u8
    r4 = traditional: [3]u8
  Instructions:
      0: UNKNOWN_OP_87 ; Direct print "RGB: " (5 chars)
      1: LOAD_INDEX ; Load array element (u8)
      2: UNKNOWN_OP_81
      3: UNKNOWN_OP_87 ; Direct print ", " (2 chars)
      4: LOAD_INDEX ; Load array element (u8)
      5: UNKNOWN_OP_81
      6: UNKNOWN_OP_87 ; Direct print ", " (2 chars)
      7: LOAD_INDEX ; Load array element (u8)
      8: UNKNOWN_OP_81
      9: UNKNOWN_OP_87 ; Direct print "
" (1 chars)
     10: UNKNOWN_OP_87 ; Direct print "Matrix:
" (8 chars)
     11: LOAD_INDEX ; Load array element ([2]u8)
     12: LOAD_INDEX ; Load array element (u8)
     13: UNKNOWN_OP_81
     14: UNKNOWN_OP_87 ; Direct print " " (1 chars)
     15: LOAD_INDEX ; Load array element ([2]u8)
     16: LOAD_INDEX ; Load array element (u8)
     17: UNKNOWN_OP_81
     18: UNKNOWN_OP_87 ; Direct print "
" (1 chars)
     19: LOAD_INDEX ; Load array element ([2]u8)
     20: LOAD_INDEX ; Load array element (u8)
     21: UNKNOWN_OP_81
     22: UNKNOWN_OP_87 ; Direct print " " (1 chars)
     23: LOAD_INDEX ; Load array element ([2]u8)
     24: LOAD_INDEX ; Load array element (u8)
     25: UNKNOWN_OP_81
     26: UNKNOWN_OP_87 ; Direct print "
" (1 chars)
     27: return

Function ......examples.array_initializers.sum_array(arr: *[4]u8) -> u8
  @smc
  Locals:
    r2 = sum: u8
  Instructions:
      0: r5 = 4
      1: r6 = r4 ; Initialize loop variable i
      2: for_loop_1:
      3: r7 = r6 < r5 ; Check i < end
      4: jump_if_not r7, for_end_2
      5: UNKNOWN_OP_33 ; Load from anchor arr$imm0
      6: LOAD_INDEX ; Load array element (u8)
      7: r6 = r6 + r13 ; Increment i
      8: r13 = 1
      9: jump for_loop_1
     10: for_end_2:
     11: r14 = load sum
     12: return r14

Function ......examples.array_initializers.test_sum() -> void
  @smc
  Locals:
    r1 = numbers: [4]u8
    r2 = total: u16
  Instructions:
      0: UNKNOWN_OP_68
      1: r5 = call sum_array
      2: UNKNOWN_OP_87 ; Direct print "Sum: " (5 chars)
      3: UNKNOWN_OP_82
      4: return

