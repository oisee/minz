; MinZ Intermediate Representation (MIR)
; Module: main

Function ......examples.test_complex_assign_simple.test_arrays() -> u8
  @smc
  Locals:
    r1 = arr: [5]u8
    r14 = i: u8
  Instructions:
      0: UNKNOWN_OP_67 ; Store to array[index] (u8)
      1: UNKNOWN_OP_67 ; Store to array[index] (u8)
      2: UNKNOWN_OP_67 ; Store to array[index] (u8)
      3: UNKNOWN_OP_67 ; Store to array[index] (u8)
      4: LOAD_INDEX ; Load array element (u8)
      5: LOAD_INDEX ; Load array element (u8)
      6: r26 = r22 + r25
      7: LOAD_INDEX ; Load array element (u8)
      8: r30 = r26 + r29
      9: LOAD_INDEX ; Load array element (u8)
     10: r34 = r30 + r33
     11: return r34

Function ......examples.test_complex_assign_simple.test_structs() -> u8
  @smc
  Locals:
    r1 = v: ......examples.test_complex_assign_simple.Vec2
  Instructions:
      0: r6 = load v
      1: LOAD_FIELD ; Load field x (offset 0)
      2: r8 = load v
      3: LOAD_FIELD ; Load field y (offset 1)
      4: r10 = r7 + r9
      5: return r10

Function ......examples.test_complex_assign_simple.main() -> u8
  @smc
  Locals:
    r1 = a: u8
    r3 = s: u8
  Instructions:
      0: r2 = call test_arrays
      1: r4 = call test_structs
      2: r5 = load a
      3: return r5

