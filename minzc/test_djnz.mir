; MinZ Intermediate Representation (MIR)
; Module: main

Function ...test_djnz_iterator.main() -> void
  @smc
  Locals:
    r1 = small: [5]u8
  Instructions:
      0: UNKNOWN_OP_88
      1: UNKNOWN_OP_86 ; Print "=== DJNZ Optimized Loop (5 elements) ===" (40 chars via loop)
      2: r3 = load small
      3: NOP ; DJNZ OPTIMIZED LOOP for array[5]
      4: r4 = 5 ; DJNZ counter = 5
      5: r5 = r3 ; Pointer to array start
      6: djnz_loop_1:
      7: UNKNOWN_OP_69 ; Load element via pointer
      8: r7 = call print_u8 ; Call print_u8
      9: INC ; Advance to next element
     10: UNKNOWN_OP_77 ; DJNZ - decrement and loop
     11: UNKNOWN_OP_88
     12: UNKNOWN_OP_86 ; Print "
=== DJNZ with map ===" (22 chars via loop)
     13: r9 = load small
     14: NOP ; DJNZ OPTIMIZED LOOP for array[5]
     15: r10 = 5 ; DJNZ counter = 5
     16: r11 = r9 ; Pointer to array start
     17: djnz_loop_2:
     18: UNKNOWN_OP_69 ; Load element via pointer
     19: r13 = call double ; Call double
     20: r14 = call print_u8 ; Call print_u8
     21: INC ; Advance to next element
     22: UNKNOWN_OP_77 ; DJNZ - decrement and loop
     23: return

Function ...test_djnz_iterator.double(x: u8) -> u8
  @smc
  Instructions:
      0: LOAD_PARAM
      1: r3 = 2
      2: r4 = r2 * r3
      3: return r4

Function ...test_djnz_iterator.print_u8(x: u8) -> void
  @smc
  Instructions:
      0: return

