; MinZ Intermediate Representation (MIR)
; Module: main

Function ...examples.metafunction_demo.demo_simple_print() -> void
  @smc
  Instructions:
      0: UNKNOWN_OP_87
      1: UNKNOWN_OP_86
      2: UNKNOWN_OP_87
      3: UNKNOWN_OP_86
      4: UNKNOWN_OP_87
      5: UNKNOWN_OP_86
      6: return

Function ...examples.metafunction_demo.demo_constants() -> void
  @smc
  Locals:
    r5 = runtime_value: u16
  Instructions:
      0: UNKNOWN_OP_87
      1: UNKNOWN_OP_86
      2: UNKNOWN_OP_87
      3: UNKNOWN_OP_86
      4: UNKNOWN_OP_87
      5: UNKNOWN_OP_86
      6: UNKNOWN_OP_87
      7: UNKNOWN_OP_86
      8: r6 = call get_user_input
      9: store , r6
     10: r7 = load runtime_value
     11: UNKNOWN_OP_82
     12: return

Function ...examples.metafunction_demo.demo_mixed() -> void
  @smc
  Locals:
    r1 = user_score: u16
  Instructions:
      0: r2 = call get_user_input
      1: store , r2
      2: UNKNOWN_OP_87
      3: UNKNOWN_OP_86
      4: UNKNOWN_OP_87
      5: UNKNOWN_OP_86
      6: return

Function ...examples.metafunction_demo.demo_formatting() -> void
  @smc
  Locals:
    r1 = address: u16
    r3 = flags: u8
  Instructions:
      0: r2 = 32768
      1: store , r2
      2: r4 = 210
      3: store , r4
      4: UNKNOWN_OP_87
      5: UNKNOWN_OP_86
      6: UNKNOWN_OP_87
      7: UNKNOWN_OP_86
      8: return

Function ...examples.metafunction_demo.demo_debug() -> void
  @smc
  Locals:
    r1 = temperature: i8
    r3 = pressure: u16
  Instructions:
      0: r2 = 25
      1: store , r2
      2: r4 = 1013
      3: store , r4
      4: UNKNOWN_OP_87
      5: UNKNOWN_OP_86
      6: UNKNOWN_OP_87
      7: UNKNOWN_OP_86
      8: return

Function ...examples.metafunction_demo.demo_assertions() -> void
  @smc
  Locals:
    r1 = buffer_size: u16
  Instructions:
      0: r2 = 1024
      1: store , r2
      2: UNKNOWN_OP_87
      3: UNKNOWN_OP_86
      4: return

Function ...examples.metafunction_demo.demo_platform() -> void
  @smc
  Instructions:
      0: UNKNOWN_OP_87
      1: UNKNOWN_OP_86
      2: return

Function ...examples.metafunction_demo.demo_complex() -> void
  @smc
  Locals:
    r1 = player_name: *u8
    r3 = level: u8
    r5 = score: u16
    r7 = health: u8
  Instructions:
      0: LOAD_LABEL ; Load string "Alice"
      1: store , r2
      2: r4 = 5
      3: store , r4
      4: r6 = 12500
      5: store , r6
      6: r8 = 85
      7: store , r8
      8: r9 = load health
      9: UNKNOWN_OP_81
     10: return

Function ...examples.metafunction_demo.demo_error_handling() -> void
  @smc
  Locals:
    r1 = error_code: u8
  Instructions:
      0: r2 = call check_system
      1: store , r2
      2: r3 = load error_code
      3: r4 = 0
      4: r5 = r3 != r4
      5: jump_if_not r5, else_1
      6: UNKNOWN_OP_87
      7: UNKNOWN_OP_86
      8: jump end_if_2
      9: else_1:
     10: end_if_2:
     11: UNKNOWN_OP_87
     12: UNKNOWN_OP_86
     13: return

Function ...examples.metafunction_demo.demo_performance() -> void
  @smc
  Locals:
    r1 = result: u16
  Instructions:
      0: r2 = 10
      1: r3 = call fibonacci
      2: store , r3
      3: UNKNOWN_OP_87
      4: UNKNOWN_OP_86
      5: return

Function ...examples.metafunction_demo.demo_string_building() -> void
  @smc
  Locals:
    r1 = version: *u8
    r3 = status: *u8
    r5 = timestamp: *u8
  Instructions:
      0: LOAD_LABEL ; Load string "MinZ v1.0.0"
      1: store , r2
      2: LOAD_LABEL ; Load string "Status: OK"
      3: store , r4
      4: LOAD_LABEL ; Load string "Built: 2025-01-15"
      5: store , r6
      6: UNKNOWN_OP_87
      7: UNKNOWN_OP_86
      8: UNKNOWN_OP_87
      9: UNKNOWN_OP_86
     10: UNKNOWN_OP_87
     11: UNKNOWN_OP_86
     12: return

Function ...examples.metafunction_demo.demo_atomic() -> void
  @smc
  Locals:
    r1 = counter: u16
    r6 = doubled: u8
  Instructions:
      0: r2 = 0
      1: store , r2
      2: r3 = load counter
      3: r4 = 1
      4: r5 = r3 + r4
      5: store counter, r5
      6: r7 = 42
      7: store , r7
      8: r8 = load doubled
      9: r9 = 2
     10: r10 = r8 * r9
     11: store doubled, r10
     12: UNKNOWN_OP_87
     13: UNKNOWN_OP_86
     14: UNKNOWN_OP_87
     15: UNKNOWN_OP_86
     16: return

Function ...examples.metafunction_demo.get_user_input() -> u16
  @smc
  Instructions:
      0: r1 = 1337
      1: return r1

Function ...examples.metafunction_demo.check_system() -> u8
  @smc
  Instructions:
      0: r1 = 0
      1: return r1

Function ...examples.metafunction_demo.fibonacci(n: u8) -> u16
  @smc
  @recursive
  Instructions:
      0: LOAD_PARAM
      1: r3 = 1
      2: r4 = r2 <= r3
      3: jump_if_not r4, else_3
      4: LOAD_PARAM
      5: return r5
      6: jump end_if_4
      7: else_3:
      8: end_if_4:
      9: LOAD_PARAM
     10: r7 = 1
     11: r8 = r6 - r7
     12: r9 = call fibonacci
     13: LOAD_PARAM
     14: r11 = 2
     15: r12 = r10 - r11
     16: r13 = call fibonacci
     17: r14 = r9 + r13
     18: return r14

Function ...examples.metafunction_demo.main() -> void
  @smc
  Instructions:
      0: UNKNOWN_OP_87
      1: UNKNOWN_OP_86
      2: r2 = call demo_simple_print
      3: r3 = call demo_constants
      4: r4 = call demo_mixed
      5: r5 = call demo_formatting
      6: r6 = call demo_debug
      7: r7 = call demo_assertions
      8: r8 = call demo_platform
      9: r9 = call demo_complex
     10: r10 = call demo_error_handling
     11: r11 = call demo_performance
     12: r12 = call demo_string_building
     13: r13 = call demo_atomic
     14: UNKNOWN_OP_87
     15: UNKNOWN_OP_86
     16: UNKNOWN_OP_87
     17: UNKNOWN_OP_86
     18: return

