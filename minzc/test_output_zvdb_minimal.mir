; MinZ Intermediate Representation (MIR)
; Module: main

Function ...examples.zvdb_minimal.hamming8(a: u8, b: u8) -> u8
  @smc
  Locals:
    r3 = xor: u16
    r7 = count: u16
  Instructions:
      0: LOAD_PARAM
      1: LOAD_PARAM
      2: r6 = r4 ^ r5
      3: store , r6
      4: r8 = load xor
      5: store , r8
      6: r9 = load count
      7: r10 = 85
      8: r11 = r9 & r10
      9: r12 = load count
     10: r13 = 1
     11: SHR
     12: r15 = 85
     13: r16 = r14 & r15
     14: r17 = r11 + r16
     15: store count, r17
     16: r18 = load count
     17: r19 = 51
     18: r20 = r18 & r19
     19: r21 = load count
     20: r22 = 2
     21: SHR
     22: r24 = 51
     23: r25 = r23 & r24
     24: r26 = r20 + r25
     25: store count, r26
     26: r27 = load count
     27: r28 = 15
     28: r29 = r27 & r28
     29: r30 = load count
     30: r31 = 4
     31: SHR
     32: r33 = 15
     33: r34 = r32 & r33
     34: r35 = r29 + r34
     35: store count, r35
     36: r36 = load count
     37: return r36

Function ...examples.zvdb_minimal.add_vector(store: *...examples.zvdb_minimal.VectorStore, vec: u8) -> bool
  @smc
  Instructions:
      0: LOAD_PARAM
      1: LOAD_FIELD ; Load field count (offset 256)
      2: r5 = 255
      3: r6 = r4 >= r5
      4: jump_if_not r6, else_1
      5: return
      6: jump end_if_2
      7: else_1:
      8: end_if_2:
      9: LOAD_PARAM
     10: LOAD_PARAM
     11: LOAD_FIELD ; Load field vectors (offset 0)
     12: LOAD_PARAM
     13: LOAD_FIELD ; Load field count (offset 256)
     14: r12 = r9 + r11 ; Calculate array element address
     15: UNKNOWN_OP_64 ; Store to array[index] (u8)
     16: LOAD_PARAM
     17: LOAD_FIELD ; Load field count (offset 256)
     18: r15 = 1
     19: r16 = r14 + r15
     20: LOAD_PARAM
     21: STORE_FIELD ; Store to field count (offset 256)
     22: return

Function ...examples.zvdb_minimal.find_nearest(store: *...examples.zvdb_minimal.VectorStore, query: u8) -> u8
  @smc
  Locals:
    r3 = best_idx: u8
    r5 = best_dist: u8
    r7 = i: u8
    r13 = dist: u16
  Instructions:
      0: r4 = 0
      1: store , r4
      2: r6 = 255
      3: store , r6
      4: r8 = 0
      5: store , r8
      6: loop_3:
      7: r9 = load i
      8: LOAD_PARAM
      9: LOAD_FIELD ; Load field count (offset 256)
     10: r12 = r9 < r11
     11: jump_if_not r12, end_loop_4
     12: LOAD_PARAM
     13: LOAD_PARAM
     14: LOAD_FIELD ; Load field vectors (offset 0)
     15: r17 = load i
     16: LOAD_INDEX ; Load array element (u8)
     17: r19 = call hamming8
     18: store , r19
     19: r20 = load dist
     20: r21 = load best_dist
     21: r22 = r20 < r21
     22: jump_if_not r22, else_5
     23: r23 = load dist
     24: store best_dist, r23
     25: r24 = load i
     26: store best_idx, r24
     27: jump end_if_6
     28: else_5:
     29: end_if_6:
     30: r25 = load i
     31: r26 = 1
     32: r27 = r25 + r26
     33: store i, r27
     34: jump loop_3
     35: end_loop_4:
     36: r28 = load best_idx
     37: return r28

Function ...examples.zvdb_minimal.main() -> void
  @smc
  Locals:
    r1 = store: ...examples.zvdb_minimal.VectorStore
    r20 = query: u8
    r22 = nearest: u16
  Instructions:
      0: r2 = 0
      1: r3 = load store
      2: STORE_FIELD ; Store to field count (offset 256)
      3: r4 = load store
      4: UNKNOWN_OP_65
      5: r6 = 170
      6: r7 = call add_vector
      7: r8 = load store
      8: UNKNOWN_OP_65
      9: r10 = 85
     10: r11 = call add_vector
     11: r12 = load store
     12: UNKNOWN_OP_65
     13: r14 = 240
     14: r15 = call add_vector
     15: r16 = load store
     16: UNKNOWN_OP_65
     17: r18 = 15
     18: r19 = call add_vector
     19: r21 = 171
     20: store , r21
     21: r23 = load store
     22: UNKNOWN_OP_65
     23: r25 = load query
     24: r26 = call find_nearest
     25: store , r26
     26: return

