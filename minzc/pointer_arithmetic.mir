; MinZ Intermediate Representation (MIR)
; Module: main

Function ...examples.pointer_arithmetic.array_sum(data: *u8, count: u8) -> u16
  Locals:
    r3 = sum: u16
    r5 = i: u8
  Instructions:
      0: r4 = r4 ^ r4 ; XOR A,A (optimized from LD A,0)
      1: store , r4
      2: r6 = r6 ^ r6 ; XOR A,A (optimized from LD A,0)
      3: store , r6
      4: loop_1:
      5: r7 = load i
      6: 12
      7: r9 = r7 < r8
      8: jump_if_not r9, end_loop_2
      9: jump loop_1
     10: end_loop_2:
     11: r10 = load sum
     12: return r10

Function ...examples.pointer_arithmetic.find_max(data: *u8, count: u8) -> u8
  Locals:
    r3 = max: u8
    r6 = i: u8
  Instructions:
      0: 12
      1: 59
      2: store , r5
      3: r7 = 1
      4: store , r7
      5: loop_3:
      6: r8 = load i
      7: 12
      8: r10 = r8 < r9
      9: jump_if_not r10, end_loop_4
     10: 12
     11: 59
     12: r13 = load max
     13: r14 = r12 > r13
     14: jump_if_not r14, else_5
     15: jump end_if_6
     16: else_5:
     17: end_if_6:
     18: jump loop_3
     19: end_loop_4:
     20: r15 = load max
     21: return r15

