; MinZ Intermediate Representation (MIR)
; Module: main

Function examples.test_optest.test_zero_comparison$u8(x: u8) -> bool
  @smc
  Instructions:
      0: LOAD_PARAM
      1: r3 = 0
      2: r4 = r2 == r3
      3: jump_if_not r4, else_1
      4: r5 = 1
      5: return r5
      6: jump end_if_2
      7: else_1:
      8: end_if_2:
      9: r6 = 0
     10: return r6

Function examples.test_optest.test_nonzero_check$u16(x: u16) -> bool
  @smc
  Instructions:
      0: LOAD_PARAM
      1: r3 = 0
      2: r4 = r2 != r3
      3: jump_if_not r4, else_3
      4: r5 = 1
      5: return r5
      6: jump end_if_4
      7: else_3:
      8: end_if_4:
      9: r6 = 0
     10: return r6

Function examples.test_optest.test_conditional_assignment$u8(x: u8) -> u8
  @smc
  Locals:
    r2 = result: u8
  Instructions:
      0: LOAD_PARAM
      1: r4 = 0
      2: r5 = r3 != r4
      3: jump_if_not r5, else_5
      4: r6 = 10
      5: store result, r6
      6: jump end_if_6
      7: else_5:
      8: r7 = 20
      9: store result, r7
     10: end_if_6:
     11: r8 = load result
     12: return r8

Function examples.test_optest.main() -> void
  @smc
  Locals:
    r1 = a: u16
    r5 = b: u16
    r9 = c: u16
    r13 = d: u16
    r17 = e: u16
    r21 = f: u16
  Instructions:
      0: r2 = 0
      1: r3 = 0
      2: r4 = call examples.test_optest.test_zero_comparison$u8
      3: store , r4
      4: r6 = 5
      5: r7 = 5
      6: r8 = call examples.test_optest.test_zero_comparison$u8
      7: store , r8
      8: r10 = 0
      9: r11 = 0
     10: r12 = call examples.test_optest.test_nonzero_check$u16
     11: store , r12
     12: r14 = 100
     13: r15 = 100
     14: r16 = call examples.test_optest.test_nonzero_check$u16
     15: store , r16
     16: r18 = 0
     17: r19 = 0
     18: r20 = call examples.test_optest.test_conditional_assignment$u8
     19: store , r20
     20: r22 = 1
     21: r23 = 1
     22: r24 = call examples.test_optest.test_conditional_assignment$u8
     23: store , r24
     24: return

