; MinZ Intermediate Representation (MIR)
; Module: main

Function simple_viz.max$u8$u8(a: u8, b: u8) -> u8
  @smc
  Instructions:
      0: LOAD_PARAM
      1: LOAD_PARAM
      2: r5 = r3 > r4
      3: jump_if_not r5, else_1
      4: LOAD_PARAM
      5: return r6
      6: jump end_if_2
      7: else_1:
      8: LOAD_PARAM
      9: return r7
     10: end_if_2:
     11: return

Function simple_viz.main() -> void
  @smc
  Locals:
    r1 = x: u8
    r3 = y: u8
    r5 = result: u8
  Instructions:
      0: r2 = 10
      1: store , r2
      2: r4 = 20
      3: store , r4
      4: r6 = load x
      5: r7 = load y
      6: r8 = load x
      7: r9 = load y
      8: r10 = call simple_viz.max$u8$u8
      9: store , r10
     10: PRINT_STRING_DIRECT ; Direct print "Max = " (6 chars)
     11: r11 = load result
     12: PRINT_U8
     13: PRINT_STRING_DIRECT ; Direct print "
" (1 chars)
     14: return

