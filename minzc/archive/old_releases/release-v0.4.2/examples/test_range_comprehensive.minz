// Comprehensive range expression tests

// Test nested for loops
fun matrix_sum(rows: u8, cols: u8) -> u16 {
    var sum: u16 = 0;
    
    for r in 0..rows {
        for c in 0..cols {
            // Simulate matrix element
            var element: u8 = r * cols + c;
            sum = sum + element;
        }
    }
    
    return sum;
}

// Test for loop with array access
fun array_process() -> u8 {
    var arr: [10]u8;
    
    // Initialize array
    for i in 0..10 {
        arr[i] = i * 2;
    }
    
    // Sum array
    var sum: u8 = 0;
    for i in 0..10 {
        sum = sum + arr[i];
    }
    
    return sum;
}

// Test for loop with variable range
fun dynamic_range(n: u8) -> u16 {
    var result: u16 = 1;
    
    // Factorial-like computation
    for i in 1..n {
        result = result * i;
    }
    
    return result;
}

fun main() -> u16 {
    var a: u16 = matrix_sum(3, 4);     // 3x4 matrix
    var b: u8 = array_process();       // Array ops
    var c: u16 = dynamic_range(5);     // Variable range
    
    return a + b + c;
}