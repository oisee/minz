; MinZ Intermediate Representation (MIR)
; Module: main

Function ......examples.string_operations.str_length(str: *u8) -> u16
  @smc
  Locals:
    r2 = len: u16
  Instructions:
      0: loop_1:
      1: UNKNOWN_OP_33 ; Load from anchor str$imm0
      2: UNKNOWN_OP_69
      3: UNKNOWN_OP_57
      4: jump_if_not r7, end_loop_2
      5: UNKNOWN_OP_33 ; Load from anchor str$imm0
      6: jump loop_1
      7: end_loop_2:
      8: r14 = load len
      9: return r14

Function ......examples.string_operations.str_copy(dest: *u8, src: *u8) -> void
  @smc
  Instructions:
      0: loop_3:
      1: UNKNOWN_OP_33 ; Load from anchor src$imm0
      2: UNKNOWN_OP_69
      3: UNKNOWN_OP_57
      4: jump_if_not r6, end_loop_4
      5: UNKNOWN_OP_33 ; Load from anchor src$imm0
      6: UNKNOWN_OP_69
      7: UNKNOWN_OP_33 ; Load from anchor dest$imm0
      8: UNKNOWN_OP_70 ; Store through pointer
      9: UNKNOWN_OP_33 ; Load from anchor dest$imm0
     10: r11 = 1
     11: r12 = r10 + r11
     12: UNKNOWN_OP_33 ; Load from anchor src$imm0
     13: store dest, r12
     14: jump loop_3
     15: end_loop_4:
     16: UNKNOWN_OP_33 ; Load from anchor dest$imm0
     17: UNKNOWN_OP_70 ; Store through pointer
     18: return

