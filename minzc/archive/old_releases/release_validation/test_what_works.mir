; MinZ Intermediate Representation (MIR)
; Module: main

Function ......examples.test_what_works.add_numbers(a: u8, b: u8) -> u8
  @smc
  Instructions:
      0: UNKNOWN_OP_33 ; Load from anchor a$imm0
      1: UNKNOWN_OP_33 ; Load from anchor b$imm0
      2: r5 = r3 + r4
      3: return r5

Function ......examples.test_what_works.test_for_loops() -> u16
  @smc
  Locals:
    r1 = sum: u16
  Instructions:
      0: r4 = 10
      1: r5 = r3 ; Initialize loop variable i
      2: for_loop_1:
      3: r6 = r5 < r4 ; Check i < end
      4: jump_if_not r6, for_end_2
      5: r5 = r5 + r10 ; Increment i
      6: r10 = 1
      7: jump for_loop_1
      8: for_end_2:
      9: r11 = load sum
     10: return r11

Function ......examples.test_what_works.test_arrays() -> u8
  @smc
  Locals:
    r1 = arr: [5]u8
  Instructions:
      0: UNKNOWN_OP_67 ; Store to array[index] (u8)
      1: UNKNOWN_OP_67 ; Store to array[index] (u8)
      2: LOAD_INDEX ; Load array element (u8)
      3: LOAD_INDEX ; Load array element (u8)
      4: r16 = r12 + r15
      5: return r16

Function ......examples.test_what_works.test_structs() -> u8
  @smc
  Locals:
    r1 = p: ......examples.test_what_works.Point
  Instructions:
      0: r6 = load p
      1: LOAD_FIELD ; Load field x (offset 0)
      2: r8 = load p
      3: LOAD_FIELD ; Load field y (offset 1)
      4: r10 = r7 + r9
      5: return r10

Function ......examples.test_what_works.test_while() -> u8
  @smc
  Locals:
    r1 = i: u8
    r3 = sum: u8
  Instructions:
      0: loop_3:
      1: r5 = load i
      2: r6 = 5
      3: r7 = r5 < r6
      4: jump_if_not r7, end_loop_4
      5: jump loop_3
      6: end_loop_4:
      7: r14 = load sum
      8: return r14

Function ......examples.test_what_works.test_if(x: u8) -> u8
  @smc
  Instructions:
      0: UNKNOWN_OP_33 ; Load from anchor x$imm0
      1: r3 = 10
      2: r4 = r2 > r3
      3: jump_if_not r4, else_5
      4: UNKNOWN_OP_33 ; Load from anchor x$imm0
      5: SHL
      6: return r7
      7: else_5:
      8: UNKNOWN_OP_33 ; Load from anchor x$imm0
      9: r9 = 5
     10: r10 = r8 + r9
     11: return r10

Function ......examples.test_what_works.test_tsmc(ptr: *u8) -> u8
  @smc
  Locals:
    r2 = result: u8
  Instructions:
      0: UNKNOWN_OP_33 ; Load from anchor ptr$imm0
      1: UNKNOWN_OP_69
      2: UNKNOWN_OP_33 ; Load from anchor ptr$imm0
      3: UNKNOWN_OP_32 ; Update TSMC reference ptr
      4: r8 = load result
      5: return r8

Function ......examples.test_what_works.main() -> u16
  @smc
  Locals:
    r1 = result: u16
  Instructions:
      0: r4 = call test_for_loops
      1: r7 = call test_arrays
      2: r10 = call test_structs
      3: r13 = call test_while
      4: r17 = call test_if
      5: r19 = load result
      6: return r19

