; MinZ Intermediate Representation (MIR)
; Module: main

Function ...examples.stack_variables.test_stack_locals(x: u8, y: u8) -> u8
  @smc
  Locals:
    r3 = a: u8
    r7 = b: u8
    r11 = c: u8
  Instructions:
      0: LOAD_PARAM
      1: r5 = 10
      2: r6 = r4 + r5
      3: store , r6
      4: LOAD_PARAM
      5: r9 = 20
      6: r10 = r8 + r9
      7: store , r10
      8: r12 = load a
      9: r13 = load b
     10: r14 = r12 + r13
     11: store , r14
     12: r15 = load c
     13: return r15

Function ...examples.stack_variables.factorial(n: u8) -> u16
  @smc
  @recursive
  Locals:
    r6 = prev: u16
  Instructions:
      0: LOAD_PARAM
      1: r3 = 1
      2: r4 = r2 <= r3
      3: jump_if_not r4, else_1
      4: r5 = 1
      5: return r5
      6: jump end_if_2
      7: else_1:
      8: end_if_2:
      9: LOAD_PARAM
     10: r8 = 1
     11: r9 = r7 - r8
     12: r10 = call factorial
     13: store , r10
     14: LOAD_PARAM
     15: r12 = load prev
     16: r13 = r11 * r12
     17: return r13

Function ...examples.stack_variables.many_locals() -> u8
  Locals:
    r1 = a: u8
    r3 = b: u8
    r5 = c: u8
    r7 = d: u8
    r9 = e: u8
    r11 = f: u8
    r13 = g: u8
    r15 = h: u8
    r17 = sum1: u8
    r25 = sum2: u8
  Instructions:
      0: r2 = 1
      1: store , r2
      2: r4 = 2
      3: store , r4
      4: r6 = 3
      5: store , r6
      6: r8 = 4
      7: store , r8
      8: r10 = 5
      9: store , r10
     10: r12 = 6
     11: store , r12
     12: r14 = 7
     13: store , r14
     14: r16 = 8
     15: store , r16
     16: r18 = load a
     17: r19 = load b
     18: r20 = r18 + r19
     19: r21 = load c
     20: r22 = r20 + r21
     21: r23 = load d
     22: r24 = r22 + r23
     23: store , r24
     24: r26 = load e
     25: r27 = load f
     26: r28 = r26 + r27
     27: r29 = load g
     28: r30 = r28 + r29
     29: r31 = load h
     30: r32 = r30 + r31
     31: store , r32
     32: r33 = load sum1
     33: r34 = load sum2
     34: r35 = r33 + r34
     35: return r35

Function ...examples.stack_variables.outer(x: u8) -> u8
  @smc
  Locals:
    r2 = local1: u8
    r6 = result: u8
    r9 = local2: u8
  Instructions:
      0: LOAD_PARAM
      1: r4 = 1
      2: r5 = r3 + r4
      3: store , r5
      4: r7 = load local1
      5: r8 = call inner
      6: store , r8
      7: r10 = load result
      8: r11 = 1
      9: r12 = r10 + r11
     10: store , r12
     11: r13 = load local2
     12: return r13

Function ...examples.stack_variables.inner(y: u8) -> u8
  @smc
  Locals:
    r2 = temp: u8
  Instructions:
      0: LOAD_PARAM
      1: r4 = 2
      2: r5 = r3 * r4
      3: store , r5
      4: r6 = load temp
      5: return r6

Function ...examples.stack_variables.main() -> void
  @smc
  Locals:
    r1 = r1: u16
    r5 = r2: u16
    r8 = r3: u16
    r10 = r4: u16
  Instructions:
      0: r2 = 5
      1: r3 = 10
      2: r4 = call test_stack_locals
      3: store , r4
      4: r6 = 5
      5: r7 = call factorial
      6: store , r7
      7: r9 = call many_locals
      8: store , r9
      9: r11 = 10
     10: r12 = call outer
     11: store , r12
     12: return

