; MinZ Intermediate Representation (MIR)
; Module: main

Function examples.test_peephole_patterns.test_zero_load() -> u8
  @smc
  Locals:
    r1 = a: u8
  Instructions:
      0: r3 = load a
      1: return r3

Function examples.test_peephole_patterns.test_inc_dec() -> u8
  @smc
  Locals:
    r1 = x: u8
  Instructions:
      0: r9 = load x
      1: return r9

Function examples.test_peephole_patterns.test_compare_zero$u8(val: u8) -> bool
  @smc
  Instructions:
      0: TRUE_SMC_LOAD ; Load from anchor val$imm0
      1: TEST
      2: jump_if_not r4, else_1
      3: r5 = 1
      4: return r5
      5: else_1:
      6: r6 = 0
      7: return r6

Function examples.test_peephole_patterns.test_16bit_inc() -> u16
  @smc
  Locals:
    r1 = val: u16
  Instructions:
      0: r6 = load val
      1: return r6

Function examples.test_peephole_patterns.test_double_swap() -> void
  @smc
  Locals:
    r1 = a: u16
    r3 = b: u16
    r5 = temp: u16
  Instructions:
      0: return

Function examples.test_peephole_patterns.main() -> void
  @smc
  Locals:
    r1 = result1: u8
    r3 = result2: u8
    r5 = result3: bool
    r9 = result4: u16
  Instructions:
      0: r2 = r2 ; Inlined return value
      1: r4 = r10 ; Inlined return value
      2: LOAD_PARAM ; Inlined from examples.test_peephole_patterns.test_compare_zero$u8
      3: TEST ; Inlined from examples.test_peephole_patterns.test_compare_zero$u8
      4: jump_if_not r12, else_1 ; Inlined from examples.test_peephole_patterns.test_compare_zero$u8
      5: r8 = r13 ; Inlined return value
      6: else_1: ; Inlined from examples.test_peephole_patterns.test_compare_zero$u8
      7: r8 = r14 ; Inlined return value
      8: r10 = r19 ; Inlined return value
      9: return

