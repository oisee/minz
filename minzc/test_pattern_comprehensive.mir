; MinZ Intermediate Representation (MIR)
; Module: main

Function ...test_pattern_comprehensive.status_message(s: Status) -> u16
  Instructions:
      0: 12
      1: r3 = r2 == r0
      2: 3
      3: jump case_arm_1_3
      4: r4 = r2 == r0
      5: 3
      6: jump case_arm_2_4
      7: r5 = r2 == r0
      8: 3
      9: jump case_end_1
     10: case_arm_0_2:
     11: r6 = 1
     12: jump case_end_1
     13: case_arm_1_3:
     14: r7 = 2
     15: jump case_end_1
     16: case_arm_2_4:
     17: r8 = 3
     18: case_end_1:
     19: return

Function ...test_pattern_comprehensive.color_value(c: Color) -> u16
  Instructions:
      0: 12
      1: r3 = r2 == r0
      2: 3
      3: jump case_arm_1_7
      4: r4 = r2 == r0
      5: 3
      6: jump case_arm_2_8
      7: r5 = r2 == r0
      8: 3
      9: jump case_end_5
     10: case_arm_0_6:
     11: r6 = 255
     12: jump case_end_5
     13: case_arm_1_7:
     14: r7 = 65280
     15: jump case_end_5
     16: case_arm_2_8:
     17: r8 = 16711680
     18: case_end_5:
     19: return

Function ...test_pattern_comprehensive.main() -> void
  @smc
  Locals:
    r1 = status: u16
    r3 = msg: u16
    r9 = color: u16
    r11 = value: u16
  Instructions:
      0: r2 = 1
      1: store , r2
      2: r4 = load status
      3: r5 = call status_message
      4: store , r5
      5: 83
      6: 82
      7: r7 = load msg
      8: 78
      9: 83
     10: 82
     11: r10 = 2
     12: store , r10
     13: r12 = load color
     14: r13 = call color_value
     15: store , r13
     16: 83
     17: 82
     18: r15 = load value
     19: 78
     20: 83
     21: 82
     22: return

