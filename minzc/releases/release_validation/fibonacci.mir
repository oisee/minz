; MinZ Intermediate Representation (MIR)
; Module: main

Function ......examples.fibonacci.fibonacci(n: u8) -> u16
  @smc
  Locals:
    r6 = a: u16
    r8 = b: u16
    r10 = i: u8
    r15 = temp: u16
  Instructions:
      0: UNKNOWN_OP_33 ; Load from anchor n$imm0
      1: r3 = 1
      2: r4 = r2 <= r3
      3: jump_if_not r4, else_1
      4: UNKNOWN_OP_33 ; Load from anchor n$imm0
      5: return r5
      6: else_1:
      7: loop_3:
      8: r12 = load i
      9: UNKNOWN_OP_33 ; Load from anchor n$imm0
     10: r14 = r12 <= r13
     11: jump_if_not r14, end_loop_4
     12: jump loop_3
     13: end_loop_4:
     14: r24 = load b
     15: return r24

Function ......examples.fibonacci.main() -> void
  @smc
  Locals:
    r1 = result: u16
  Instructions:
      0: r3 = call fibonacci
      1: return

