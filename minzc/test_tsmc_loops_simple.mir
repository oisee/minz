; MinZ Intermediate Representation (MIR)
; Module: main

; Globals:
;   i: u16

Function ...examples.tsmc_loops_simple.sum_array_tsmc(arr: *u8, count: u16) -> u16
  @smc
  Locals:
    r3 = sum: u16
    r5 = i: u16
  Instructions:
      0: r4 = r4 ^ r4 ; XOR A,A (optimized from LD A,0)
      1: store , r4
      2: r6 = r6 ^ r6 ; XOR A,A (optimized from LD A,0)
      3: store , r6
      4: loop_1:
      5: r7 = load i
      6: 30 ; Load from anchor count$imm0
      7: r9 = r7 < r8
      8: jump_if_not r9, end_loop_2
      9: r10 = load sum
     10: 30 ; Load from anchor arr$imm0
     11: 63
     12: r13 = r10 + r12
     13: store sum, r13
     14: 30 ; Load from anchor arr$imm0
     15: 29 ; Update TSMC reference arr
     16: 43 ; INC (optimized from ADD 1)
     17: store i, r19
     18: jump loop_1
     19: end_loop_2:
     20: r20 = load sum
     21: return r20

