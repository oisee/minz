; MinZ Intermediate Representation (MIR)
; Module: main

Function simple_tail_test.countdown$u8(n: u8) -> u8
  @smc
  @recursive
  Instructions:
      0: LOAD_PARAM
      1: r3 = 0
      2: r4 = r2 == r3
      3: jump_if_not r4, else_1
      4: r5 = 0
      5: return r5
      6: jump end_if_2
      7: else_1:
      8: end_if_2:
      9: LOAD_PARAM
     10: r7 = 1
     11: r8 = r6 - r7
     12: LOAD_PARAM
     13: r10 = 1
     14: r11 = r9 - r10
     15: r12 = call simple_tail_test.countdown$u8
     16: return r12

Function simple_tail_test.main() -> void
  @smc
  Locals:
    r1 = result: u16
  Instructions:
      0: r2 = 5
      1: r3 = 5
      2: r4 = call simple_tail_test.countdown$u8
      3: store , r4
      4: return

