; MinZ generated code
; Generated: 2025-07-29 05:44:58


; Data section
    ORG $F000

...examples.arrays.old_array:
    DS 10
...examples.arrays.new_array:
    DS 10
...examples.arrays.items:
    DS 15

; Code section
    ORG $8000

; Using hierarchical register allocation (physical → shadow → memory)

; Function: ...examples.arrays.main
...examples.arrays.main:
; IsSMCDefault=true, IsSMCEnabled=true
; Using absolute addressing for locals (SMC style)
    ; r1 = 42
    LD A, 42
    ; Register 1 already in A
    ; r2 = addr(...examples.arrays.old_array)
    LD HL, ...examples.arrays.old_array
    LD ($F004), HL    ; Virtual register 2 to memory
    ; r3 = 0
    LD A, 0
    LD B, A         ; Store to physical register B
    ; Calculate array element address
    LD HL, ($F004)    ; Virtual register 2 from memory
    LD D, H
    LD E, L
    ADD HL, DE
    LD D, H
    LD E, L
    ; Store to array[index] (u8)
    LD H, D
    LD L, E
    PUSH HL
    ; Register 1 already in A
    POP HL
    LD (HL), A
    ; r5 = 43
    LD A, 43
    LD C, A         ; Store to physical register C
    ; r6 = addr(...examples.arrays.new_array)
    LD HL, ...examples.arrays.new_array
    LD B, H
    LD C, L
    ; r7 = 0
    LD A, 0
    EXX               ; Switch to shadow registers
    LD B', A         ; Store to shadow B'
    EXX               ; Switch back to main registers
    ; Calculate array element address
    LD H, B
    LD L, C
    LD D, H
    LD E, L
    ADD HL, DE
    PUSH HL           ; Save current HL
    EXX               ; Switch to shadow registers
    POP HL            ; Load into shadow HL
    EXX               ; Switch back to main registers
    ; Store to array[index] (u8)
    EXX               ; Switch to shadow registers
    PUSH HL           ; Save shadow HL
    EXX               ; Switch back to main registers
    POP HL            ; Load shadow HL into main HL
    PUSH HL
    LD A, C
    POP HL
    LD (HL), A
    ; r9 = 1
    LD A, 1
    EXX               ; Switch to shadow registers
    LD C', A         ; Store to shadow C'
    EXX               ; Switch back to main registers
    ; r10 = addr(...examples.arrays.items)
    LD HL, ...examples.arrays.items
    ; r11 = 0
    LD A, 0
    EXX               ; Switch to shadow registers
    LD E', A         ; Store to shadow E'
    EXX               ; Switch back to main registers
    ; Load array element (...examples.arrays.Item)
    PUSH HL
    EXX               ; Switch to shadow registers
    POP HL
    ADD HL, DE
    LD A, (HL)
    LD L, A         ; Store to HL (low byte)
    ; Store to field id (offset 0)
    ; Register 12 already in HL
    PUSH HL
    POP DE
    LD (DE), L
    INC DE
    LD (DE), H
    ; return
    RET

    END main
