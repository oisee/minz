; MinZ Intermediate Representation (MIR)
; Module: main

Function ...examples.feature_tests.01_basic_types.test_unsigned_types() -> bool
  @smc
  Locals:
    r1 = a: u8
    r3 = b: u8
    r5 = c: u16
    r13 = x: u16
    r15 = y: u16
    r17 = z: u16
  Instructions:
      0: r2 = 255
      1: store a, r2
      2: r4 = 1
      3: store b, r4
      4: r6 = load a
      5: r7 = load b
      6: r8 = r6 + r7
      7: store c, r8
      8: r9 = load c
      9: r10 = 0
     10: r11 = r9 != r10
     11: jump_if_not r11, else_1
     12: r12 = 0
     13: return r12
     14: jump end_if_2
     15: else_1:
     16: end_if_2:
     17: r14 = 65535
     18: store x, r14
     19: r16 = 1
     20: store y, r16
     21: r18 = load x
     22: r19 = load y
     23: r20 = r18 + r19
     24: store z, r20
     25: r21 = load z
     26: r22 = 0
     27: r23 = r21 != r22
     28: jump_if_not r23, else_3
     29: r24 = 0
     30: return r24
     31: jump end_if_4
     32: else_3:
     33: end_if_4:
     34: r25 = 1
     35: return r25

Function ...examples.feature_tests.01_basic_types.test_signed_types() -> bool
  @smc
  Locals:
    r1 = a: i8
    r3 = b: i8
    r5 = c: u16
    r14 = x: i16
    r16 = y: i16
    r18 = z: u16
  Instructions:
      0: r2 = 127
      1: store a, r2
      2: r4 = 1
      3: store b, r4
      4: r6 = load a
      5: r7 = load b
      6: r8 = r6 + r7
      7: store c, r8
      8: r9 = load c
      9: r10 = 128
     10: NEG
     11: r12 = r9 != r11
     12: jump_if_not r12, else_5
     13: r13 = 0
     14: return r13
     15: jump end_if_6
     16: else_5:
     17: end_if_6:
     18: r15 = 32767
     19: store x, r15
     20: r17 = 1
     21: store y, r17
     22: r19 = load x
     23: r20 = load y
     24: r21 = r19 + r20
     25: store z, r21
     26: r22 = load z
     27: r23 = 32768
     28: NEG
     29: r25 = r22 != r24
     30: jump_if_not r25, else_7
     31: r26 = 0
     32: return r26
     33: jump end_if_8
     34: else_7:
     35: end_if_8:
     36: r27 = 1
     37: return r27

Function ...examples.feature_tests.01_basic_types.test_boolean_ops() -> bool
  @smc
  Locals:
    r1 = t: bool
    r3 = f: bool
  Instructions:
      0: r2 = 1
      1: store t, r2
      2: r4 = 0
      3: store f, r4
      4: r5 = load t
      5: r6 = load t
      6: UNKNOWN_OP_60
      7: r8 = ~r7
      8: jump_if_not r8, else_9
      9: r9 = 0
     10: return r9
     11: jump end_if_10
     12: else_9:
     13: end_if_10:
     14: r10 = load t
     15: r11 = load f
     16: UNKNOWN_OP_60
     17: jump_if_not r12, else_11
     18: r13 = 0
     19: return r13
     20: jump end_if_12
     21: else_11:
     22: end_if_12:
     23: r14 = load t
     24: r15 = load f
     25: UNKNOWN_OP_61
     26: r17 = ~r16
     27: jump_if_not r17, else_13
     28: r18 = 0
     29: return r18
     30: jump end_if_14
     31: else_13:
     32: end_if_14:
     33: r19 = load f
     34: r20 = load f
     35: UNKNOWN_OP_61
     36: jump_if_not r21, else_15
     37: r22 = 0
     38: return r22
     39: jump end_if_16
     40: else_15:
     41: end_if_16:
     42: r23 = load t
     43: r24 = ~r23
     44: jump_if_not r24, else_17
     45: r25 = 0
     46: return r25
     47: jump end_if_18
     48: else_17:
     49: end_if_18:
     50: r26 = load f
     51: r27 = ~r26
     52: r28 = ~r27
     53: jump_if_not r28, else_19
     54: r29 = 0
     55: return r29
     56: jump end_if_20
     57: else_19:
     58: end_if_20:
     59: r30 = 1
     60: return r30

Function ...examples.feature_tests.01_basic_types.test_comparisons() -> bool
  @smc
  Locals:
    r1 = a: u8
    r3 = b: u8
  Instructions:
      0: r2 = 10
      1: store a, r2
      2: r4 = 20
      3: store b, r4
      4: r5 = load a
      5: r6 = load b
      6: r7 = r5 < r6
      7: r8 = ~r7
      8: jump_if_not r8, else_21
      9: r9 = 0
     10: return r9
     11: jump end_if_22
     12: else_21:
     13: end_if_22:
     14: r10 = load b
     15: r11 = load a
     16: r12 = r10 > r11
     17: r13 = ~r12
     18: jump_if_not r13, else_23
     19: r14 = 0
     20: return r14
     21: jump end_if_24
     22: else_23:
     23: end_if_24:
     24: r15 = load a
     25: r16 = 10
     26: r17 = r15 <= r16
     27: r18 = ~r17
     28: jump_if_not r18, else_25
     29: r19 = 0
     30: return r19
     31: jump end_if_26
     32: else_25:
     33: end_if_26:
     34: r20 = load b
     35: r21 = 20
     36: r22 = r20 >= r21
     37: r23 = ~r22
     38: jump_if_not r23, else_27
     39: r24 = 0
     40: return r24
     41: jump end_if_28
     42: else_27:
     43: end_if_28:
     44: r25 = load a
     45: r26 = load b
     46: r27 = r25 == r26
     47: jump_if_not r27, else_29
     48: r28 = 0
     49: return r28
     50: jump end_if_30
     51: else_29:
     52: end_if_30:
     53: r29 = load a
     54: r30 = load b
     55: r31 = r29 != r30
     56: r32 = ~r31
     57: jump_if_not r32, else_31
     58: r33 = 0
     59: return r33
     60: jump end_if_32
     61: else_31:
     62: end_if_32:
     63: r34 = 1
     64: return r34

Function ...examples.feature_tests.01_basic_types.test_type_casting() -> bool
  @smc
  Locals:
    r1 = a: u8
    r3 = b: u16
    r9 = c: i8
    r12 = d: i16
    r19 = e: u16
    r21 = f: u8
  Instructions:
      0: r2 = 100
      1: store a, r2
      2: r4 = load a
      3: store b, r4
      4: r5 = load b
      5: r6 = 100
      6: r7 = r5 != r6
      7: jump_if_not r7, else_33
      8: r8 = 0
      9: return r8
     10: jump end_if_34
     11: else_33:
     12: end_if_34:
     13: r10 = 50
     14: NEG
     15: store c, r11
     16: r13 = load c
     17: store d, r13
     18: r14 = load d
     19: r15 = 50
     20: NEG
     21: r17 = r14 != r16
     22: jump_if_not r17, else_35
     23: r18 = 0
     24: return r18
     25: jump end_if_36
     26: else_35:
     27: end_if_36:
     28: r20 = 300
     29: store e, r20
     30: r22 = load e
     31: store f, r22
     32: r23 = load f
     33: r24 = 44
     34: r25 = r23 != r24
     35: jump_if_not r25, else_37
     36: r26 = 0
     37: return r26
     38: jump end_if_38
     39: else_37:
     40: end_if_38:
     41: r27 = 1
     42: return r27

Function ...examples.feature_tests.01_basic_types.main() -> u8
  @smc
  Instructions:
      0: r1 = call ...examples.feature_tests.01_basic_types.test_unsigned_types
      1: r2 = ~r1
      2: jump_if_not r2, else_39
      3: r3 = 1
      4: return r3
      5: jump end_if_40
      6: else_39:
      7: end_if_40:
      8: r4 = call ...examples.feature_tests.01_basic_types.test_signed_types
      9: r5 = ~r4
     10: jump_if_not r5, else_41
     11: r6 = 2
     12: return r6
     13: jump end_if_42
     14: else_41:
     15: end_if_42:
     16: r7 = call ...examples.feature_tests.01_basic_types.test_boolean_ops
     17: r8 = ~r7
     18: jump_if_not r8, else_43
     19: r9 = 3
     20: return r9
     21: jump end_if_44
     22: else_43:
     23: end_if_44:
     24: r10 = call ...examples.feature_tests.01_basic_types.test_comparisons
     25: r11 = ~r10
     26: jump_if_not r11, else_45
     27: r12 = 4
     28: return r12
     29: jump end_if_46
     30: else_45:
     31: end_if_46:
     32: r13 = call ...examples.feature_tests.01_basic_types.test_type_casting
     33: r14 = ~r13
     34: jump_if_not r14, else_47
     35: r15 = 5
     36: return r15
     37: jump end_if_48
     38: else_47:
     39: end_if_48:
     40: r16 = 0
     41: return r16

