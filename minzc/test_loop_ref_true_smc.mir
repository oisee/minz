; MinZ Intermediate Representation (MIR)
; Module: main

Function ...examples.test_loop_ref.main() -> void
  @smc
  Locals:
    r1 = i: u8
    r34 = at_max: u8
  Instructions:
      0: r2 = r2 ^ r2 ; XOR A,A (optimized from LD A,0)
      1: store , r2
      2: loop_1:
      3: r3 = load i
      4: r4 = 10
      5: r5 = r3 < r4
      6: jump_if_not r5, end_loop_2
      7: r6 = r6 ^ r6 ; XOR A,A (optimized from LD A,0)
      8: 13 ; Load array element (...examples.test_loop_ref.Counter)
      9: 12 ; Store to field value (offset 0)
     10: r10 = load i
     11: r11 = 5
     12: r12 = r10 + r11
     13: 13 ; Load array element (...examples.test_loop_ref.Counter)
     14: 12 ; Store to field max (offset 1)
     15: 33 ; INC (optimized from ADD 1)
     16: store i, r18
     17: jump loop_1
     18: end_loop_2:
     19: 55 ; Load table base address
     20: 55 ; Load table base for end calculation
     21: 60 ; Calculate table end (+ 10 elements * 2 bytes)
     22: 59 ; Load loop counter
     23: 41 ; Check if reached end of table
     24: 3 ; Exit if done
     25: r24 = load counter
     26: 11 ; Load field value (offset 0)
     27: r26 = load counter
     28: 11 ; Load field max (offset 1)
     29: r28 = r25 < r27
     30: jump_if_not r28, else_5
     31: 33 ; INC (optimized from ADD 1)
     32: r33 = load counter
     33: 12 ; Store to field value (offset 0)
     34: jump end_if_6
     35: else_5:
     36: end_if_6:
     37: 60 ; Advance to next element (+2 bytes)
     38: 58 ; Decrement counter and loop if not zero
     39: r35 = r35 ^ r35 ; XOR A,A (optimized from LD A,0)
     40: store , r35
     41: 55 ; Load table base address
     42: 55 ; Load table base for end calculation
     43: 60 ; Calculate table end (+ 10 elements * 2 bytes)
     44: 59 ; Load loop counter
     45: 41 ; Check if reached end of table
     46: 3 ; Exit if done
     47: r41 = load counter
     48: 11 ; Load field value (offset 0)
     49: r43 = load counter
     50: 11 ; Load field max (offset 1)
     51: r45 = r42 == r44
     52: jump_if_not r45, else_9
     53: 33 ; INC (optimized from ADD 1)
     54: store at_max, r48
     55: jump end_if_10
     56: else_9:
     57: end_if_10:
     58: 60 ; Advance to next element (+2 bytes)
     59: 58 ; Decrement counter and loop if not zero
     60: return

