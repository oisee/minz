; MinZ Intermediate Representation (MIR)
; Module: main

Function ...examples.test_loop_simple.main() -> void
  @smc
  Instructions:
      0: r1 = 10
      1: 13 ; Load array element (...examples.test_loop_simple.Point)
      2: 12 ; Store to field x (offset 0)
      3: r5 = 20
      4: 13 ; Load array element (...examples.test_loop_simple.Point)
      5: 12 ; Store to field y (offset 1)
      6: r9 = 30
      7: 13 ; Load array element (...examples.test_loop_simple.Point)
      8: 12 ; Store to field x (offset 0)
      9: r13 = 40
     10: 13 ; Load array element (...examples.test_loop_simple.Point)
     11: 12 ; Store to field y (offset 1)
     12: r17 = 50
     13: 13 ; Load array element (...examples.test_loop_simple.Point)
     14: 12 ; Store to field x (offset 0)
     15: r21 = 60
     16: 13 ; Load array element (...examples.test_loop_simple.Point)
     17: 12 ; Store to field y (offset 1)
     18: r25 = 70
     19: 13 ; Load array element (...examples.test_loop_simple.Point)
     20: 12 ; Store to field x (offset 0)
     21: r29 = 80
     22: 13 ; Load array element (...examples.test_loop_simple.Point)
     23: 12 ; Store to field y (offset 1)
     24: 55 ; Load table base address
     25: 55 ; Load table base for end calculation
     26: 60 ; Calculate table end (+ 4 elements * 2 bytes)
     27: 59 ; Load loop counter
     28: 41 ; Check if reached end of table
     29: 3 ; Exit if done
     30: 56 ; Copy element to buffer at $F000
     31: 17 ; Load p.x from buffer at $F000
     32: 18 ; Store to p.x at buffer $F000
     33: 17 ; Load p.y from buffer at $F001
     34: 18 ; Store to p.y at buffer $F001
     35: 57 ; Copy buffer back to element at $F000
     36: 60 ; Advance to next element (+2 bytes)
     37: 58 ; Decrement counter and loop if not zero
     38: 55 ; Load table base address
     39: 55 ; Load table base for end calculation
     40: 60 ; Calculate table end (+ 4 elements * 2 bytes)
     41: 59 ; Load loop counter
     42: 41 ; Check if reached end of table
     43: 3 ; Exit if done
     44: r49 = load p
     45: 11 ; Load field x (offset 0)
     46: r51 = 2
     47: r52 = r50 + r51
     48: r53 = load p
     49: 12 ; Store to field x (offset 0)
     50: 60 ; Advance to next element (+2 bytes)
     51: 58 ; Decrement counter and loop if not zero
     52: return

