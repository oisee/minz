; MinZ generated code
; Generated: 2025-08-06 23:33:32


; Code section
    ORG $8000

; Using hierarchical register allocation (physical → shadow → memory)

; Function: expected.simple_add.add_numbers$u8$u8
expected.simple_add.add_numbers$u8$u8:
; IsSMCDefault=true, IsSMCEnabled=true
; Using absolute addressing for locals (SMC style)
expected.simple_add.add_numbers$u8$u8_param_a:
    LD HL, #0000   ; SMC parameter a (u8->u16)
expected.simple_add.add_numbers$u8$u8_param_b:
    LD DE, #0000   ; SMC parameter b (u8->u16)
    EX DE, HL      ; Move to HL for storage
    ; r5 = r3 + r4
    LD D, H
    LD E, L
    ADD HL, DE
    ; return r5
    RET
; Using hierarchical register allocation (physical → shadow → memory)

; Function: expected.simple_add.main
expected.simple_add.main:
; IsSMCDefault=true, IsSMCEnabled=true
; Using absolute addressing for locals (SMC style)
    ; r2 = 42
    LD A, 42
    LD E, A         ; Store to physical register E
    ; store x, r2
    LD A, E
    LD ($F002), A
    ; r4 = 13
    LD A, 13
    LD L, A         ; Store to physical register L
    ; store y, r4
    LD A, L
    LD ($F006), A
    ; r6 = load x
    LD A, ($F002)
    EXX               ; Switch to shadow registers
    LD C', A         ; Store to shadow C'
    EXX               ; Switch back to main registers
    ; r7 = load y
    LD A, ($F006)
    LD ($F00E), A     ; Virtual register 7 to memory
    ; r8 = load x
    LD A, ($F002)
    EXX               ; Switch to shadow registers
    LD E', A         ; Store to shadow E'
    EXX               ; Switch back to main registers
    ; r9 = load y
    LD A, ($F006)
    LD H, A         ; Store to physical register H
    ; r10 = call expected.simple_add.add_numbers$u8$u8
    ; Call to expected.simple_add.add_numbers$u8$u8 (args: 2)
    ; Found function, UsesTrueSMC=false
    CALL expected.simple_add.add_numbers$u8$u8
    ; store result, r10
    LD A, H
    LD ($F00A), A
    ; r11 = load result
    LD A, ($F00A)
    EXX               ; Switch to shadow registers
    LD D', A         ; Store to shadow D'
    EXX               ; Switch back to main registers
    ; return r11
    RET

    END main
