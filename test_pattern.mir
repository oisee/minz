; MinZ Intermediate Representation (MIR)
; Module: main

Function test_pattern_match.get_value$Color(c: Color) -> u8
  @smc
  Instructions:
      0: LOAD_PARAM
      1: r3 = r2 == r0
      2: JUMP_IF
      3: jump case_arm_1_3
      4: r4 = r2 == r0
      5: JUMP_IF
      6: jump case_arm_2_4
      7: r5 = r2 == r0
      8: JUMP_IF
      9: jump case_end_1
     10: case_arm_0_2:
     11: r6 = 1
     12: jump case_end_1
     13: case_arm_1_3:
     14: r7 = 2
     15: jump case_end_1
     16: case_arm_2_4:
     17: r8 = 3
     18: case_end_1:
     19: return

Function test_pattern_match.main() -> void
  @smc
  Locals:
    r1 = color: u16
    r3 = val: u8
  Instructions:
      0: r2 = 0
      1: store color, r2
      2: r4 = load color
      3: r5 = load color
      4: PATCH_TEMPLATE
      5: PATCH_TARGET
      6: PATCH_PARAM
      7: r6 = call test_pattern_match.get_value$Color
      8: store val, r6
      9: r7 = load val
     10: r0 = call print_u8_decimal ; Call runtime print_u8_decimal
     11: return

